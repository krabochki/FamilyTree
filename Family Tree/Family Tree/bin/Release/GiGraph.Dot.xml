<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>GiGraph.Dot</name>
    </assembly>
    <members>
        <member name="M:GiGraph.Dot.Extensions.DotEntityAttributesExtension.GetMetadata``3(GiGraph.Dot.Entities.Attributes.Properties.Accessors.DotEntityAttributesAccessor{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
            <summary>
                Gets the metadata of the DOT attribute specified by the property expression.
            </summary>
            <param name="this">
                The current attribute collection context whose property to get the metadata for.
            </param>
            <param name="property">
                The property to get attribute metadata for.
            </param>
            <typeparam name="TProperty">
                The type returned by the property.
            </typeparam>
            <typeparam name="TInterface">
                An interface that provides access to properties that represent DOT attributes.
            </typeparam>
            <typeparam name="TImplementation">
                The implementation of the <typeparamref name="TInterface" /> interface.
            </typeparam>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotEntityAttributesExtension.GetMetadataDictionary``2(GiGraph.Dot.Entities.Attributes.Properties.Accessors.DotEntityAttributesAccessor{``0,``1})">
            <summary>
                Gets a dictionary where the key is a DOT attribute, and the value is the attribute's metadata in the context of the current
                element.
            </summary>
            <param name="this">
                The current attribute collection context to get the metadata dictionary for.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotFillableExtension.SetPlainColorFill``1(``0,GiGraph.Dot.Types.Colors.DotColor)">
            <summary>
                Sets a plain-color fill.
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="color">
                The color to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotFillableExtension.SetGradientFill``1(``0,GiGraph.Dot.Types.Colors.DotGradientColor,System.Nullable{System.Int32})">
            <summary>
                Sets a gradient fill.
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="color">
                The gradient color definition to use.
            </param>
            <param name="angle">
                The angle of the fill.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotFillableExtension.SetGradientFill``1(``0,GiGraph.Dot.Types.Colors.DotColor,GiGraph.Dot.Types.Colors.DotColor,System.Nullable{System.Int32})">
            <summary>
                <para>
                    Sets a gradient fill.
                </para>
                <para>
                    Note that if at least one weighted color is specified (see <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />), a degenerate linear gradient
                    fill is done. This essentially does a fill using two colors, with the <see cref="P:GiGraph.Dot.Types.Colors.DotWeightedColor.Weight" /> specifying
                    how much of region is filled with each color.
                </para>
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="startColor">
                The start color of the gradient fill.
            </param>
            <param name="endColor">
                The end color of the gradient fill.
            </param>
            <param name="angle">
                The angle of the fill.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotFillableExtension.SetRadialGradientFill``1(``0,GiGraph.Dot.Types.Colors.DotGradientColor,System.Nullable{System.Int32})">
            <summary>
                Sets a radial gradient fill.
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="color">
                The gradient color definition to use.
            </param>
            <param name="angle">
                The angle of the fill.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotFillableExtension.SetRadialGradientFill``1(``0,GiGraph.Dot.Types.Colors.DotColor,GiGraph.Dot.Types.Colors.DotColor,System.Nullable{System.Int32})">
            <summary>
                Sets a radial gradient fill.
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="startColor">
                The start color of the gradient fill.
            </param>
            <param name="endColor">
                The end color of the gradient fill.
            </param>
            <param name="angle">
                The angle of the fill.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Extensions.DotGraphExtension">
            <summary>
                Provides extension methods for <see cref="T:GiGraph.Dot.Entities.Graphs.DotGraph" />.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotGraphExtension.Build(GiGraph.Dot.Entities.Graphs.DotGraph,GiGraph.Dot.Output.Options.DotFormattingOptions,GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Stringifies the specified graph to the DOT format.
            </summary>
            <param name="graph">
                The graph to stringify.
            </param>
            <param name="formattingOptions">
                The formatting options to use.
            </param>
            <param name="syntaxOptions">
                The generation options to use.
            </param>
            <param name="syntaxRules">
                The syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotGraphExtension.Build(GiGraph.Dot.Entities.Graphs.DotGraph,System.IO.TextWriter,GiGraph.Dot.Output.Options.DotFormattingOptions,GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Stringifies the specified graph to the DOT format into a stream writer.
            </summary>
            <param name="graph">
                The graph to stringify.
            </param>
            <param name="outputWriter">
                The output to write the DOT string to.
            </param>
            <param name="formattingOptions">
                The formatting options to use.
            </param>
            <param name="syntaxOptions">
                The generation options to use.
            </param>
            <param name="syntaxRules">
                The syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotGraphExtension.Build(GiGraph.Dot.Entities.Graphs.DotGraph,System.IO.TextWriter,GiGraph.Dot.Output.Generators.Graphs.IDotGraphGeneratorBuilder,GiGraph.Dot.Output.Options.DotFormattingOptions,GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Stringifies the specified graph to the DOT format into a stream writer.
            </summary>
            <param name="graph">
                The graph to stringify.
            </param>
            <param name="outputWriter">
                The output to write the DOT string to.
            </param>
            <param name="formattingOptions">
                The formatting options to use.
            </param>
            <param name="syntaxOptions">
                The generation options to use.
            </param>
            <param name="syntaxRules">
                The syntax rules to use.
            </param>
            <param name="graphGeneratorBuilder">
                The graph generator builder to use in order to get the graph builder to generate the DOT output with.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotGraphExtension.SaveToFile(GiGraph.Dot.Entities.Graphs.DotGraph,System.String,GiGraph.Dot.Output.Options.DotFormattingOptions,GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules,System.Text.Encoding)">
            <summary>
                Stringifies the specified graph to the DOT format and saves it to the specified file (the file will be overwritten if it
                already exists). Provide a custom encoding if you want a BOM (Byte Order Mark) to be written to the file.
            </summary>
            <param name="graph">
                The graph to stringify.
            </param>
            <param name="filePath">
                The path to the file to save the graph to.
            </param>
            <param name="formattingOptions">
                The formatting options to use.
            </param>
            <param name="syntaxOptions">
                The generation options to use.
            </param>
            <param name="syntaxRules">
                The syntax rules to use.
            </param>
            <param name="encoding">
                The encoding to use for the output text.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotGraphExtension.SaveToFileAsync(GiGraph.Dot.Entities.Graphs.DotGraph,System.String,GiGraph.Dot.Output.Options.DotFormattingOptions,GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules,System.Text.Encoding)">
            <summary>
                Stringifies the specified graph to the DOT format and saves it to the specified file (the file will be overwritten if it
                already exists). Provide a custom encoding if you want a BOM (Byte Order Mark) to be written to the file.
            </summary>
            <param name="graph">
                The graph to stringify.
            </param>
            <param name="filePath">
                The path to the file to save the graph to.
            </param>
            <param name="formattingOptions">
                The formatting options to use.
            </param>
            <param name="syntaxOptions">
                The generation options to use.
            </param>
            <param name="syntaxRules">
                The syntax rules to use.
            </param>
            <param name="encoding">
                The encoding to use for the output text.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotGraphSectionExtension.SetBackground(GiGraph.Dot.Entities.Graphs.DotGraphSection,GiGraph.Dot.Types.Colors.DotColor)">
            <summary>
                Sets a background color.
            </summary>
            <param name="this">
                The current context to set the background for.
            </param>
            <param name="color">
                The color to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotGraphSectionExtension.SetGradientBackground(GiGraph.Dot.Entities.Graphs.DotGraphSection,GiGraph.Dot.Types.Colors.DotGradientColor,System.Nullable{System.Int32})">
            <summary>
                Sets a gradient background color. Note that the fill style set by this method (as opposed to the color) applies not only to
                the root graph, but also to clusters (globally) since this is a root graph's attribute. So if radial fill style was
                previously specified on the clusters collection, it will be removed by this method.
            </summary>
            <param name="this">
                The current context to set the background for.
            </param>
            <param name="color">
                The gradient color definition to use.
            </param>
            <param name="angle">
                The angle of the fill. Note that this attribute also applies to clusters.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotGraphSectionExtension.SetGradientBackground(GiGraph.Dot.Entities.Graphs.DotGraphSection,GiGraph.Dot.Types.Colors.DotColor,GiGraph.Dot.Types.Colors.DotColor,System.Nullable{System.Int32})">
            <summary>
                <para>
                    Sets a gradient background color. Note that the fill style set by this method (as opposed to the color) applies not only
                    to the root graph, but also to clusters (globally) since this is a root graph's attribute. So if radial fill style was
                    previously specified on the clusters collection, it will be removed by this method.
                </para>
                <para>
                    Also, if at least one weighted color is specified (see <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />), a degenerate linear gradient
                    fill will be done. This essentially does a fill using two colors, with the <see cref="P:GiGraph.Dot.Types.Colors.DotWeightedColor.Weight" />
                    specifying how much of region is filled with each color.
                </para>
            </summary>
            <param name="this">
                The current context to set the background for.
            </param>
            <param name="startColor">
                The start color of the gradient fill.
            </param>
            <param name="endColor">
                The end color of the gradient fill.
            </param>
            <param name="angle">
                The angle of the fill. Note that this attribute also applies to clusters.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotGraphSectionExtension.SetRadialGradientBackground(GiGraph.Dot.Entities.Graphs.DotGraphSection,GiGraph.Dot.Types.Colors.DotGradientColor,System.Nullable{System.Int32})">
            <summary>
                Sets a radial gradient background color. Note that the radial fill style set by this method (as opposed to the color) applies
                not only to the root graph, but also to clusters (globally) since this is a root graph's attribute.
            </summary>
            <param name="this">
                The current context to set the background for.
            </param>
            <param name="color">
                The gradient color definition to use.
            </param>
            <param name="angle">
                The angle of the fill. Note that this attribute also applies to clusters.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotGraphSectionExtension.SetRadialGradientBackground(GiGraph.Dot.Entities.Graphs.DotGraphSection,GiGraph.Dot.Types.Colors.DotColor,GiGraph.Dot.Types.Colors.DotColor,System.Nullable{System.Int32})">
            <summary>
                Sets a radial gradient background color. Note that the radial fill style set by this method (as opposed to the color) applies
                not only to the root graph, but also to clusters (globally) since this is a root graph's attribute.
            </summary>
            <param name="this">
                The current context to set the background for.
            </param>
            <param name="startColor">
                The start color of the gradient fill.
            </param>
            <param name="endColor">
                The end color of the gradient fill.
            </param>
            <param name="angle">
                The angle of the fill. Note that this attribute also applies to clusters.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Extensions.DotNodeToHtmlExtension">
            <summary>
                Provides extension methods for <see cref="T:GiGraph.Dot.Entities.Nodes.DotNodeDefinition" />.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotNodeToHtmlExtension.ToPlainHtmlNode(GiGraph.Dot.Entities.Nodes.DotNodeDefinition,System.String)">
            <summary>
                Converts the current node to an HTML node by assigning HTML text to its label attribute, and setting its shape to
                <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Plain" />. See the
                <see href="http://www.graphviz.org/doc/info/shapes.html#html">
                    documentation
                </see>
                to learn what HTML grammar is supported. Useful when the HTML entity represents a table and you don't want the node to have
                any shape.
            </summary>
            <param name="node">
                The node to convert.
            </param>
            <param name="html">
                The HTML text to assign to node label.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotNodeToHtmlExtension.ToPlainHtmlNode(GiGraph.Dot.Entities.Nodes.DotNodeDefinition,GiGraph.Dot.Entities.Html.IDotHtmlEntity)">
            <summary>
                Converts the current node to an HTML node by assigning HTML to its label attribute, and setting its shape to
                <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Plain" />. Useful when the HTML entity represents a table and you don't want the node to have any
                shape.
            </summary>
            <param name="node">
                The node to convert.
            </param>
            <param name="html">
                The HTML entity to assign to node label.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Extensions.DotNodeToRecordExtension">
            <summary>
                Provides extension methods for <see cref="T:GiGraph.Dot.Entities.Nodes.DotNodeDefinition" />.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotNodeToRecordExtension.ToRecordNode(GiGraph.Dot.Entities.Nodes.DotNodeDefinition,GiGraph.Dot.Types.Records.DotRecord)">
            <summary>
                Converts the current node to a record-shaped node.
            </summary>
            <param name="node">
                The current node.
            </param>
            <param name="record">
                The record to use as the label of the node.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotNodeToRecordExtension.ToRecordNode(GiGraph.Dot.Entities.Nodes.DotNodeDefinition,System.Action{GiGraph.Dot.Types.Records.DotRecordBuilder},System.Boolean)">
            <summary>
                Converts the current node to a record-shaped node composed using a builder.
            </summary>
            <param name="node">
                The current node.
            </param>
            <param name="buildRecord">
                A method delegate that provides a record built with a specified builder.
            </param>
            <param name="flip">
                Determines whether to change orientation of the record.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Extensions.DotNodeToRoundedRecordExtension">
            <summary>
                Provides extension methods for <see cref="T:GiGraph.Dot.Entities.Nodes.DotNodeDefinition" />.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotNodeToRoundedRecordExtension.ToRoundedRecordNode(GiGraph.Dot.Entities.Nodes.DotNodeDefinition,GiGraph.Dot.Types.Records.DotRecord)">
            <summary>
                Converts the current node to a rounded record-shaped node.
            </summary>
            <param name="node">
                The current node.
            </param>
            <param name="record">
                The record to use as the label of the node.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotNodeToRoundedRecordExtension.ToRoundedRecordNode(GiGraph.Dot.Entities.Nodes.DotNodeDefinition,System.Action{GiGraph.Dot.Types.Records.DotRecordBuilder},System.Boolean)">
            <summary>
                Converts the current node to a rounded record-shaped node composed using a builder.
            </summary>
            <param name="node">
                The current node.
            </param>
            <param name="buildRecord">
                A method delegate that provides a record built with a specified builder.
            </param>
            <param name="flip">
                Determines whether to change orientation of the record.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotShapableNodeExtension.SetPolygonalShape``1(``0,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
                Applies a polygonal shape.
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="sides">
                The number of sides (default: 4, minimum: 0).
            </param>
            <param name="regular">
                If true, forces polygon to be regular, i.e., the vertices of the polygon will lie on a circle whose center is the center of
                the node (default: false).
            </param>
            <param name="peripheries">
                Sets the number of peripheries. The default value is shape dependent, the minimum value is 0. Note that
                <see href="http://www.graphviz.org/doc/info/shapes.html#epsf">
                    user-defined shapes
                </see>
                are treated as a form of box shape, so the default peripheries value is 1, and the user-defined shape will be drawn in a
                bounding rectangle. Setting peripheries to 0 will turn this off.
            </param>
            <param name="rotation">
                Angle, in degrees, used to rotate the polygon. For any number of polygon sides, 0 degrees rotation results in a flat base.
                Default: 0, maximum: 360.
            </param>
            <param name="skew">
                Skew factor (default: 0, minimum: -100). Positive values skew top of polygon to right; negative to left.
            </param>
            <param name="distortion">
                Distortion factor (default: 0, minimum: -100). Positive values cause top part to be larger than bottom; negative values do
                the opposite.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotShapableNodeExtension.SetPolygonalShape``1(``0,GiGraph.Dot.Types.Geometry.DotPolygon)">
            <summary>
                Applies a polygonal shape.
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="attributes">
                The polygon attributes to set.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStringExtension.AsFormattedString(System.String)">
            <summary>
                Converts the string to <see cref="T:GiGraph.Dot.Types.EscapeString.DotEscapeString" /> without escaping its content. When assigned to a label of an element,
                any markups used in the text can be correctly interpreted by the visualization engine. Make sure the content complies with
                the DOT syntax rules as otherwise the output may become syntactically incorrect. Consider using
                <see cref="T:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder" /> for formulating formatted text instead.
            </summary>
            <param name="string">
                The string to convert.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStringExtension.AsHtml(System.String)">
            <summary>
                Converts the string to <see cref="T:GiGraph.Dot.Types.Html.DotHtmlString" /> without modifying it in any way. When assigned to a label of an element,
                it will be interpreted as HTML, not as plain text.
            </summary>
            <param name="string">
                The string to convert.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStripeFillableExtension.SetStripedFill``1(``0,GiGraph.Dot.Types.Colors.DotMultiColor)">
            <summary>
                Sets a striped fill. Applicable to clusters and rectangularly-shaped nodes (see <see cref="P:GiGraph.Dot.Entities.Nodes.DotNodeDefinition.Shape" />).
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="colors">
                The colors to use for consecutive stripes. Proportions for individual stripes may be specified optionally by using a
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" /> for them.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStripeFillableExtension.SetStripedFill``1(``0,GiGraph.Dot.Types.Nodes.DotNodeShape,GiGraph.Dot.Types.Colors.DotMultiColor)">
            <summary>
                Sets a striped fill. Applicable to rectangularly-shaped nodes.
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="shape">
                The shape to set (has to be rectangular).
            </param>
            <param name="colors">
                The colors to use for consecutive stripes. Proportions for individual stripes may be specified optionally by using a
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" /> for them.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStripeFillableExtension.SetStripedFill``1(``0,GiGraph.Dot.Types.Colors.DotColor[])">
            <summary>
                Sets a striped fill. Applicable to clusters and rectangularly-shaped nodes (see <see cref="P:GiGraph.Dot.Entities.Nodes.DotNodeDefinition.Shape" />).
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="colors">
                The colors to use for consecutive stripes. Proportions for individual stripes may be specified optionally by using a
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" /> for them.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStripeFillableExtension.SetStripedFill``1(``0,GiGraph.Dot.Types.Nodes.DotNodeShape,GiGraph.Dot.Types.Colors.DotColor[])">
            <summary>
                Sets a striped fill. Applicable to rectangularly-shaped nodes.
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="shape">
                The shape to set (has to be rectangular).
            </param>
            <param name="colors">
                The colors to use for consecutive stripes. Proportions for individual stripes may be specified optionally by using a
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" /> for them.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStylableEdgeExtension.SetTaperedStyle``1(``0,System.Double)">
            <summary>
                Tapers the edge's line. It starts with the specified width and tapers to width 1, in points.
            </summary>
            <param name="this">
                The current context to set the style for.
            </param>
            <param name="startWidth">
                The width to start with.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStylableEdgeExtension.SetSegmentedStyle``1(``0,GiGraph.Dot.Types.Colors.DotColor[])">
            <summary>
                Composes the edge's line from segments with the specified colors. At least one of the colors has to have a weight specified
                (use <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />).
            </summary>
            <param name="this">
                The current context to set the style for.
            </param>
            <param name="segments">
                The colors to assign to consecutive segments of the edge. At least one of the colors has to have a weight specified (see
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />), that determines the proportion of the area covered with the specified color. If only
                weighted colors are provided, the weights must sum to at most 1. If both colors with and without weights are provided, the
                sum of the weighted ones should be below 1, as otherwise those without weights will be ignored by the visualization tool.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStylableEdgeExtension.SetSegmentedStyle``1(``0,GiGraph.Dot.Types.Colors.DotMultiColor)">
            <summary>
                Composes the edge's line from segments with the specified colors. At least one of the colors has to have a weight specified
                (use <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />).
            </summary>
            <param name="this">
                The current context to set the style for.
            </param>
            <param name="segments">
                The colors to assign to consecutive segments of the edge. At least one of the colors has to have a weight specified (see
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />), that determines the proportion of the area covered with the specified color. If only
                weighted colors are provided, the weights must sum to at most 1. If both colors with and without weights are provided, the
                sum of the weighted ones should be below 1, as otherwise those without weights will be ignored by the visualization tool.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStylableEdgeExtension.SetMultilineStyle``1(``0,System.Int32,GiGraph.Dot.Types.Colors.DotColor)">
            <summary>
                Converts the edge to multiple parallel lines.
            </summary>
            <param name="this">
                The current context to set the style for.
            </param>
            <param name="lineCount">
                The number of parallel lines to compose the edge of.
            </param>
            <param name="color">
                The color to assign to individual lines the edge will be composed of. If not specified,
                <see cref="P:System.Drawing.Color.Black" /> is used.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStylableEdgeExtension.SetMultilineStyle``1(``0,GiGraph.Dot.Types.Colors.DotColor[])">
            <summary>
                Converts the edge to multiple parallel lines.
            </summary>
            <param name="this">
                The current context to set the style for.
            </param>
            <param name="lines">
                The colors to assign to individual lines the edge will be composed of. Note that weighted colors (
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />) must not be used among the colors.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotStylableEdgeExtension.SetMultilineStyle``1(``0,GiGraph.Dot.Types.Colors.DotMultiColor)">
            <summary>
                Converts the edge to multiple parallel lines.
            </summary>
            <param name="this">
                The current context to set the style for.
            </param>
            <param name="lines">
                The colors to assign to individual lines the edge will be composed of. Note that weighted colors (
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />) must not be used among the colors.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotWedgeFillableExtension.SetWedgedFill``1(``0,GiGraph.Dot.Types.Colors.DotMultiColor)">
            <summary>
                Sets a wedged fill. Applicable to elliptically-shaped nodes (see <see cref="P:GiGraph.Dot.Entities.Nodes.DotNodeDefinition.Shape" />).
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="colors">
                The colors to use for consecutive wedges. Proportions for individual wedges may be specified optionally by using a
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" /> for them.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotWedgeFillableExtension.SetWedgedFill``1(``0,GiGraph.Dot.Types.Nodes.DotNodeShape,GiGraph.Dot.Types.Colors.DotMultiColor)">
            <summary>
                Sets a wedged fill. Applicable to elliptically-shaped nodes (see <see cref="P:GiGraph.Dot.Entities.Nodes.DotNodeDefinition.Shape" />).
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="shape">
                The shape to set (has to be elliptical).
            </param>
            <param name="colors">
                The colors to use for consecutive wedges. Proportions for individual wedges may be specified optionally by using a
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" /> for them.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotWedgeFillableExtension.SetWedgedFill``1(``0,GiGraph.Dot.Types.Colors.DotColor[])">
            <summary>
                Sets a wedged fill. Applicable to elliptically-shaped nodes (see <see cref="P:GiGraph.Dot.Entities.Nodes.DotNodeDefinition.Shape" />).
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="colors">
                The colors to use for consecutive wedges. Proportions for individual wedges may be specified optionally by using a
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" /> for them.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Extensions.DotWedgeFillableExtension.SetWedgedFill``1(``0,GiGraph.Dot.Types.Nodes.DotNodeShape,GiGraph.Dot.Types.Colors.DotColor[])">
            <summary>
                Sets a wedged fill. Applicable to elliptically-shaped nodes (see <see cref="P:GiGraph.Dot.Entities.Nodes.DotNodeDefinition.Shape" />).
            </summary>
            <param name="this">
                The current context to set the fill for.
            </param>
            <param name="shape">
                The shape to set (has to be elliptical).
            </param>
            <param name="colors">
                The colors to use for consecutive wedges. Proportions for individual wedges may be specified optionally by using a
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" /> for them.
            </param>
        </member>
    </members>
</doc>
