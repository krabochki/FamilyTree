<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>GiGraph.Dot.Types</name>
    </assembly>
    <members>
        <member name="T:GiGraph.Dot.Types.Alignment.DotAlignment">
            <summary>
                Determines how an element is positioned within its containing element.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotAlignment.TopLeft">
            <summary>
                Top left.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotAlignment.TopCenter">
            <summary>
                Top centered.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotAlignment.TopRight">
            <summary>
                Top right.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotAlignment.MiddleLeft">
            <summary>
                Middle left.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotAlignment.MiddleCenter">
            <summary>
                Middle centered.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotAlignment.MiddleRight">
            <summary>
                Middle right.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotAlignment.BottomLeft">
            <summary>
                Middle left.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotAlignment.BottomCenter">
            <summary>
                Bottom centered.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotAlignment.BottomRight">
            <summary>
                Bottom right.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Alignment.DotAlignmentProperties">
            <summary>
                Alignment attributes.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Alignment.DotAlignmentProperties.#ctor">
            <summary>
                Alignment attributes.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Alignment.DotAlignmentProperties.#ctor(System.Nullable{GiGraph.Dot.Types.Alignment.DotHorizontalAlignment},System.Nullable{GiGraph.Dot.Types.Alignment.DotVerticalAlignment})">
            <summary>
                Initializes a new instance.
            </summary>
            <param name="horizontal">
                The horizontal alignment to set.
            </param>
            <param name="vertical">
                The vertical alignment to set.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Alignment.DotAlignmentProperties.#ctor(GiGraph.Dot.Types.Alignment.DotAlignment)">
            <summary>
                Initializes a new instance.
            </summary>
            <param name="alignment">
                The alignment to set.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Alignment.DotAlignmentProperties.Horizontal">
            <summary>
                Horizontal alignment.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Alignment.DotAlignmentProperties.Vertical">
            <summary>
                Vertical alignment.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Alignment.DotHorizontalAlignment">
            <summary>
                The justification options for labels.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotHorizontalAlignment.Left">
            <summary>
                Places the label at the left side of the element.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotHorizontalAlignment.Center">
            <summary>
                Places the label at the horizontal center of the element.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotHorizontalAlignment.Right">
            <summary>
                Places the label at the right side of the element.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Alignment.DotVerticalAlignment">
            <summary>
                The vertical label alignment options.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotVerticalAlignment.Top">
            <summary>
                Places the object on the top.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotVerticalAlignment.Center">
            <summary>
                Places the object in the vertical center.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Alignment.DotVerticalAlignment.Bottom">
            <summary>
                Places the object on the bottom.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Arrowheads.DotArrowhead">
            <summary>
                Defines an arrowhead shape. See the
                <see href="http://www.graphviz.org/doc/info/arrows.html">
                    documentation
                </see>
                to view what shape configurations are supported.
            </summary>
            <param name="Shape">
                Determines the shape of the arrowhead to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotArrowhead.#ctor(GiGraph.Dot.Types.Arrowheads.DotArrowheadShape)">
            <summary>
                Defines an arrowhead shape. See the
                <see href="http://www.graphviz.org/doc/info/arrows.html">
                    documentation
                </see>
                to view what shape configurations are supported.
            </summary>
            <param name="Shape">
                Determines the shape of the arrowhead to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotArrowhead.#ctor(GiGraph.Dot.Types.Arrowheads.DotArrowheadShape,System.Boolean)">
            <summary>
                Creates and initializes a new arrowhead definition instance.
            </summary>
            <param name="shape">
                Determines the shape of the arrowhead to use.
            </param>
            <param name="filled">
                Determines whether to use a filled version of the shape.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotArrowhead.#ctor(GiGraph.Dot.Types.Arrowheads.DotArrowheadShape,GiGraph.Dot.Types.Arrowheads.DotArrowheadParts)">
            <summary>
                Creates and initializes a new arrowhead definition instance.
            </summary>
            <param name="shape">
                Determines the shape of the arrowhead to use.
            </param>
            <param name="visibleParts">
                Determines whether and how to clip the shape, leaving visible only the part to the left or to the right of the edge.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotArrowhead.#ctor(GiGraph.Dot.Types.Arrowheads.DotArrowheadShape,System.Boolean,GiGraph.Dot.Types.Arrowheads.DotArrowheadParts)">
            <summary>
                Creates and initializes a new arrowhead definition instance.
            </summary>
            <param name="shape">
                Determines the shape of the arrowhead to use.
            </param>
            <param name="filled">
                Determines whether to use a filled version of the shape.
            </param>
            <param name="visibleParts">
                Determines whether and how to clip the shape, leaving visible only the part to the left or to the right of the edge.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Arrowheads.DotArrowhead.Shape">
            <summary>
                The shape of the arrowhead.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Arrowheads.DotArrowhead.IsFilled">
            <summary>
                Determines whether to use a filled version of the shape.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Arrowheads.DotArrowhead.VisibleParts">
            <summary>
                Determines whether and how to clip the shape, leaving visible only the part to the left or to the right of the edge.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotArrowhead.Filled(GiGraph.Dot.Types.Arrowheads.DotArrowheadParts)">
            <summary>
                Creates a filled arrowhead with the <see cref="F:GiGraph.Dot.Types.Arrowheads.DotArrowheadShape.Normal" /> shape.
            </summary>
            <param name="visibleParts">
                Determines whether and how to clip the shape, leaving visible only the part to the left or to the right of the edge.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotArrowhead.Filled(GiGraph.Dot.Types.Arrowheads.DotArrowheadShape,GiGraph.Dot.Types.Arrowheads.DotArrowheadParts)">
            <summary>
                Creates a filled arrowhead with the specified shape.
            </summary>
            <param name="shape">
                Determines the shape of the arrowhead to use.
            </param>
            <param name="visibleParts">
                Determines whether and how to clip the shape, leaving visible only the part to the left or to the right of the edge.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotArrowhead.Empty(GiGraph.Dot.Types.Arrowheads.DotArrowheadParts)">
            <summary>
                Creates a non-filled arrowhead with the <see cref="F:GiGraph.Dot.Types.Arrowheads.DotArrowheadShape.Normal" /> shape.
            </summary>
            <param name="visibleParts">
                Determines whether and how to clip the shape, leaving visible only the part to the left or to the right of the edge.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotArrowhead.Empty(GiGraph.Dot.Types.Arrowheads.DotArrowheadShape,GiGraph.Dot.Types.Arrowheads.DotArrowheadParts)">
            <summary>
                Creates a non-filled arrowhead with the specified shape.
            </summary>
            <param name="shape">
                Determines the shape of the arrowhead to use.
            </param>
            <param name="visibleParts">
                Determines whether and how to clip the shape, leaving visible only the part to the left or to the right of the edge.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Arrowheads.DotArrowheadDefinition">
            <summary>
                Represents an arrowhead as either a single shape (<see cref="T:GiGraph.Dot.Types.Arrowheads.DotArrowhead" />) or as a composition of multiple shapes (
                <see cref="T:GiGraph.Dot.Types.Arrowheads.DotCompositeArrowhead" />).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Arrowheads.DotArrowheadParts">
            <summary>
                Determines the parts of an arrowhead. Left and right are defined as those directions determined by looking from the edge
                towards the point where the arrow "touches" the node.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Arrowheads.DotArrowheadParts.Left">
            <summary>
                The left part of the arrowhead.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Arrowheads.DotArrowheadParts.Right">
            <summary>
                The right part of the arrowhead.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Arrowheads.DotArrowheadParts.Both">
            <summary>
                Both parts of the arrowhead.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Arrowheads.DotArrowheadShape">
            <summary>
                The arrowhead shape. See the
                <see href="https://www.graphviz.org/doc/info/arrows.html">
                    documentation
                </see>
                to view how individual shapes are visualized.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Arrowheads.DotCompositeArrowhead">
            <summary>
                Defines an arrowhead composed of multiple shapes.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotCompositeArrowhead.#ctor(GiGraph.Dot.Types.Arrowheads.DotArrowhead[])">
            <summary>
                Defines an arrowhead composed of multiple shapes.
            </summary>
            <param name="arrowheads">
                <para>
                    The consecutive arrowheads to use. Note that the first arrowhead specified occurs closest to the node. Subsequent shapes,
                    if specified, occur further from the node. Also, a shape of <see cref="F:GiGraph.Dot.Types.Arrowheads.DotArrowheadShape.None" /> uses space, so it can
                    be used as a separator between two consecutive shapes.
                </para>
                <para>
                    You can use <see cref="T:GiGraph.Dot.Types.Arrowheads.DotArrowheadShape" /> as well as <see cref="T:GiGraph.Dot.Types.Arrowheads.DotArrowhead" /> (<see cref="T:GiGraph.Dot.Types.Arrowheads.DotArrowheadShape" /> is
                    implicitly convertible to <see cref="T:GiGraph.Dot.Types.Arrowheads.DotArrowhead" />).
                </para>
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotCompositeArrowhead.#ctor(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.Arrowheads.DotArrowhead})">
            <summary>
                Creates a new arrowhead definition and initializes it with a collection of arrowheads.
            </summary>
            <param name="arrowheads">
                The consecutive arrowheads to use. Note that the first arrowhead specified occurs closest to the node. Subsequent shapes, if
                specified, occur further from the node. Also, a shape of <see cref="F:GiGraph.Dot.Types.Arrowheads.DotArrowheadShape.None" /> uses space, so it can be used
                as a separator between two consecutive shapes.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotCompositeArrowhead.#ctor(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.Arrowheads.DotArrowheadShape})">
            <summary>
                Creates a new arrowhead definition and initializes it with a collection of arrowheads with the specified shapes.
            </summary>
            <param name="shapes">
                The consecutive shapes of the arrowheads to use. Note that the first arrowhead specified occurs closest to the node.
                Subsequent shapes, if specified, occur further from the node. Also, a shape of <see cref="F:GiGraph.Dot.Types.Arrowheads.DotArrowheadShape.None" /> uses
                space, so it can be used as a separator between two consecutive shapes.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Arrowheads.DotCompositeArrowhead.Arrowheads">
            <summary>
                Gets the component arrowheads.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Clusters.DotClusterFillStyle">
            <summary>
                Fill style applicable to clusters.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Clusters.DotClusterFillStyle.None">
            <summary>
                No fill.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Clusters.DotClusterFillStyle.Normal">
            <summary>
                Causes a plain color fill when <see cref="T:GiGraph.Dot.Types.Colors.DotColor" /> is used, or a gradient fill when <see cref="T:GiGraph.Dot.Types.Colors.DotGradientColor" /> is
                used.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Clusters.DotClusterFillStyle.Striped">
            <summary>
                Causes the fill to be done as a set of vertical stripes. The colors are specified via a color list (see
                <see cref="T:GiGraph.Dot.Types.Colors.DotMultiColor" />), and drawn from left to right in list order. Optional color weights can be specified to
                indicate the proportional widths of the bars. If the sum of the weights is less than 1, the remainder is divided evenly among
                the colors with no weight.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Clusters.DotClusterFillStyle.Radial">
            <summary>
                Causes a radial gradient fill when a <see cref="T:GiGraph.Dot.Types.Colors.DotGradientColor" /> is used.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Clusters.DotClusterId">
            <summary>
                Represents cluster identifier.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Clusters.DotClusterId.#ctor(System.String)">
            <summary>
                Creates a new cluster identifier.
            </summary>
            <param name="id">
                The identifier to use.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Clusters.DotClusterStyleProperties">
            <summary>
                Cluster style attributes.
            </summary>
            <param name="FillStyle">
                Fill style.
            </param>
            <param name="BorderStyle">
                Border style.
            </param>
            <param name="BorderWeight">
                Border weight.
            </param>
            <param name="CornerStyle">
                Corner style.
            </param>
            <param name="Invisible">
                Determines whether the element is invisible.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Clusters.DotClusterStyleProperties.#ctor(GiGraph.Dot.Types.Clusters.DotClusterFillStyle,GiGraph.Dot.Types.Styling.DotBorderStyle,GiGraph.Dot.Types.Styling.DotBorderWeight,GiGraph.Dot.Types.Styling.DotCornerStyle,System.Boolean)">
            <summary>
                Cluster style attributes.
            </summary>
            <param name="FillStyle">
                Fill style.
            </param>
            <param name="BorderStyle">
                Border style.
            </param>
            <param name="BorderWeight">
                Border weight.
            </param>
            <param name="CornerStyle">
                Corner style.
            </param>
            <param name="Invisible">
                Determines whether the element is invisible.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Clusters.DotClusterVisualizationMode">
            <summary>
                The mode used for handling clusters.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Clusters.DotClusterVisualizationMode.None">
            <summary>
                At present, the modes <see cref="F:GiGraph.Dot.Types.Clusters.DotClusterVisualizationMode.Unbounded" /> and <see cref="F:GiGraph.Dot.Types.Clusters.DotClusterVisualizationMode.None" /> appear to be identical, both turning off the special
                cluster processing, specific to the <see cref="F:GiGraph.Dot.Types.Clusters.DotClusterVisualizationMode.Bounded" /> mode.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Clusters.DotClusterVisualizationMode.Unbounded">
            <summary>
                At present, the modes <see cref="F:GiGraph.Dot.Types.Clusters.DotClusterVisualizationMode.Unbounded" /> and <see cref="F:GiGraph.Dot.Types.Clusters.DotClusterVisualizationMode.None" /> appear to be identical, both turning off the special
                cluster processing, specific to the <see cref="F:GiGraph.Dot.Types.Clusters.DotClusterVisualizationMode.Bounded" /> mode.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Clusters.DotClusterVisualizationMode.Bounded">
            <summary>
                When set, a subgraph whose name begins with "cluster" is given special treatment (refers to clusters added to the clusters
                collection of the root graph). The subgraph is laid out separately, and then integrated as a unit into its parent graph, with
                a bounding rectangle drawn about it. If the cluster has a label parameter, this label is displayed within the rectangle. Note
                also that there can be clusters within clusters.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Colors.DotColor">
            <summary>
                Represents a single color.
            </summary>
            <param name="Color">
                The color to initialize the instance with.
            </param>
            <param name="Scheme">
                <para>
                    The color scheme to evaluate the current color with if a named color is specified. See <see cref="T:GiGraph.Dot.Types.Colors.DotColorSchemes" /> for
                    supported scheme names.
                </para>
                <para>
                    Pass null to use the color scheme set on the element, or to use the default scheme if none was set. Pass
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.Default" /> to make the color be evaluated using the default
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.X11" /> naming.
                </para>
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotColor.#ctor(System.Drawing.Color,System.String)">
            <summary>
                Represents a single color.
            </summary>
            <param name="Color">
                The color to initialize the instance with.
            </param>
            <param name="Scheme">
                <para>
                    The color scheme to evaluate the current color with if a named color is specified. See <see cref="T:GiGraph.Dot.Types.Colors.DotColorSchemes" /> for
                    supported scheme names.
                </para>
                <para>
                    Pass null to use the color scheme set on the element, or to use the default scheme if none was set. Pass
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.Default" /> to make the color be evaluated using the default
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.X11" /> naming.
                </para>
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotColor.#ctor(System.String,System.String)">
            <summary>
                Creates a new instance initialized with a named color.
            </summary>
            <param name="name">
                The color name to initialize the instance with. The name will be evaluated in the context of the <paramref name="scheme" />
                if specified, in the context of the scheme applied to the current element if any, or in the context of the default
                <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.X11" /> scheme otherwise.
            </param>
            <param name="scheme">
                <para>
                    The color scheme to evaluate the current color with if a named color is specified. See <see cref="T:GiGraph.Dot.Types.Colors.DotColorSchemes" /> for
                    supported scheme names.
                </para>
                <para>
                    Pass null to use the color scheme set on the element, or to use the default scheme if none was set. Pass
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.Default" /> to make the color be evaluated using the default
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.X11" /> naming.
                </para>
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Colors.DotColor.Color">
            <summary>
                The color.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Colors.DotColor.Scheme">
            <summary>
                The color scheme (see <see cref="T:GiGraph.Dot.Types.Colors.DotColorSchemes" />).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Colors.DotColorDefinition">
            <summary>
                Represents a color definition as a single color (<see cref="T:GiGraph.Dot.Types.Colors.DotColor" />), as a gradient (<see cref="T:GiGraph.Dot.Types.Colors.DotMultiColor" />) or as
                multiple colors (<see cref="T:GiGraph.Dot.Types.Colors.DotMultiColor" />).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Colors.DotColorSchemes">
            <summary>
                Provides a list of supported color schemes.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Colors.DotColorSchemes.Default">
            <summary>
                Uses the default color scheme for the associated color if a color scheme attribute has been set for the current element.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Colors.DotColorSchemes.X11">
            <summary>
                The X11 color scheme (<see href="http://www.graphviz.org/doc/info/colors.html#x11" />).
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Colors.DotColorSchemes.Svg">
            <summary>
                The SVG color scheme (<see href="http://www.graphviz.org/doc/info/colors.html#svg" />).
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Colors.DotColorSchemes.Brewer">
            <summary>
                The Brewer color schemes (<see href="http://www.graphviz.org/doc/info/colors.html#brewer" />).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Colors.DotColorSchemes.DotBrewerColorSchemes">
            <summary>
                Provides a list of supported Brewer color schemes (<see href="http://www.graphviz.org/doc/info/colors.html#brewer" />).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Colors.DotGradientColor">
            <summary>
                <para>
                    Represents a color definition visualized as a gradient fill when applied to the root graph, node, or cluster, if no
                    weighted colors are used (<see cref="T:GiGraph.Dot.Types.Colors.DotColor" /> only).
                </para>
                <para>
                    If at least one weighted color is specified (see <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />), a degenerate linear gradient fill is
                    done. This essentially does a fill using two colors, with the <see cref="P:GiGraph.Dot.Types.Colors.DotWeightedColor.Weight" /> specifying how much
                    of region is filled with each color.
                </para>
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotGradientColor.#ctor(GiGraph.Dot.Types.Colors.DotColor,GiGraph.Dot.Types.Colors.DotColor)">
            <summary>
                <para>
                    Creates a new color definition visualized as a gradient fill when applied to the root graph, node, or cluster, if no
                    weighted colors are used (<see cref="T:GiGraph.Dot.Types.Colors.DotColor" /> only).
                </para>
                <para>
                    If at least one weighted color is specified (see <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />), a degenerate linear gradient fill is
                    done. This essentially does a fill using two colors, with the <see cref="P:GiGraph.Dot.Types.Colors.DotWeightedColor.Weight" /> specifying how much
                    of region is filled with each color.
                </para>
            </summary>
            <param name="startColor">
                The start color of the gradient fill.
            </param>
            <param name="endColor">
                The end color of the gradient fill.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Colors.DotGradientColor.StartColor">
            <summary>
                The start color of the gradient fill.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Colors.DotGradientColor.EndColor">
            <summary>
                The end color of the gradient fill.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Colors.DotMultiColor">
            <summary>
                Represents a list of colors that may be used to generate gradient fill, multicolor stripes or wedges, or multicolor edges.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotMultiColor.#ctor(GiGraph.Dot.Types.Colors.DotColor[])">
            <summary>
                <para>
                    Creates a new color list rendered in a specific way depending on how many colors are specified, whether they have
                    weights, and what type of element the color list is applied to.
                </para>
                <para>
                    The returned color list will be rendered as gradient fill when two colors with no weights (<see cref="T:GiGraph.Dot.Types.Colors.DotColor" />) are
                    specified (refers to the root graph, nodes, and clusters), or as two parallel splines when applied to an edge. When a
                    weight is specified for either of the colors (<see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />), the returned color list will be rendered
                    as dual-color fill (refers to the root graph, nodes, and clusters), or as a two-segment spline, when applied to an edge
                    (with color proportions determined by the weight in both cases).
                </para>
                <para>
                    When more than two colors are specified, they will be rendered as parallel splines if used for edges (when no weights are
                    present), or as multicolor segments (when at least one weighted color is present). When used for rectangularly-shaped
                    nodes or clusters with the <see cref="F:GiGraph.Dot.Types.Styling.DotStyles.Striped" /> style, the returned color list will be rendered as a striped
                    multicolor fill, or as a wedged multicolor fill, when used for elliptically-shaped nodes with the
                    <see cref="F:GiGraph.Dot.Types.Styling.DotStyles.Wedged" /> style.
                </para>
            </summary>
            <param name="colors">
                The colors to initialize the instance with. The supported types are <see cref="T:GiGraph.Dot.Types.Colors.DotColor" /> (with no weight) and
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" /> (with weight). If only weighted colors are provided, the weights must sum to at most 1. If
                both colors with and without weights are provided, the sum of the weighted ones should be below 1, as otherwise those without
                weights will be ignored by the visualization tool.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotMultiColor.#ctor(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.Colors.DotColor})">
            <summary>
                <para>
                    Creates a new color list rendered in a specific way depending on how many colors are specified, whether they have
                    weights, and what type of element the color list is applied to.
                </para>
                <para>
                    The returned color list will be rendered as gradient fill when two colors with no weights (<see cref="T:GiGraph.Dot.Types.Colors.DotColor" />) are
                    specified (refers to the root graph, nodes, and clusters), or as two parallel splines when applied to an edge. When a
                    weight is specified for either of the colors (<see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />), the returned color list will be rendered
                    as dual-color fill (refers to the root graph, nodes, and clusters), or as a two-segment spline, when applied to an edge
                    (with color proportions determined by the weight in both cases).
                </para>
                <para>
                    When more than two colors are specified, they will be rendered as parallel splines if used for edges (when no weights are
                    present), or as multicolor segments (when at least one weighted color is present). When used for rectangularly-shaped
                    nodes or clusters with the <see cref="F:GiGraph.Dot.Types.Styling.DotStyles.Striped" /> style, the returned color list will be rendered as a striped
                    multicolor fill, or as a wedged multicolor fill, when used for elliptically-shaped nodes with the
                    <see cref="F:GiGraph.Dot.Types.Styling.DotStyles.Wedged" /> style.
                </para>
            </summary>
            <param name="colors">
                The colors to initialize the instance with. The supported types are <see cref="T:GiGraph.Dot.Types.Colors.DotColor" /> (with no weight) and
                <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" /> (with weight). If only weighted colors are provided, the weights must sum to at most 1. If
                both colors with and without weights are provided, the sum of the weighted ones should be below 1, as otherwise those without
                weights will be ignored by the visualization tool.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotMultiColor.#ctor(System.Collections.Generic.IEnumerable{System.Drawing.Color},System.String)">
            <summary>
                <para>
                    Creates a new color list rendered in a specific way depending on how many colors are specified, and what type of element
                    the color list is applied to.
                </para>
                <para>
                    The returned color list will be rendered as gradient fill when only two colors are specified (refers to the root graph,
                    nodes, and clusters), or as two parallel splines when applied to an edge.
                </para>
                <para>
                    When more than two colors are specified, they will be rendered as parallel splines, if used for edges; when used for
                    rectangularly-shaped nodes or clusters with the <see cref="F:GiGraph.Dot.Types.Styling.DotStyles.Striped" /> style, the returned color list will be
                    rendered as a striped multicolor fill, or as a wedged multicolor fill, when used for elliptically-shaped nodes with the
                    <see cref="F:GiGraph.Dot.Types.Styling.DotStyles.Wedged" /> style.
                </para>
            </summary>
            <param name="colors">
                The colors to initialize the instance with.
            </param>
            <param name="scheme">
                <para>
                    The color scheme to evaluate named colors with if any such are specified. See <see cref="T:GiGraph.Dot.Types.Colors.DotColorSchemes" /> for
                    supported scheme names.
                </para>
                <para>
                    Pass null to use the color scheme set on the current element, or to use the default scheme if none was set. Pass
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.Default" /> to make named colors be evaluated using the default
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.X11" /> naming.
                </para>
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Colors.DotMultiColor.Colors">
            <summary>
                Gets the colors of the color list (<see cref="T:GiGraph.Dot.Types.Colors.DotColor" />, <see cref="T:GiGraph.Dot.Types.Colors.DotWeightedColor" />).
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotMultiColor.Dual(GiGraph.Dot.Types.Colors.DotColor,System.Double,GiGraph.Dot.Types.Colors.DotColor,System.Double)">
            <summary>
                Creates a new color definition visualized as a dual-color fill (refers to the root graph, nodes, and clusters), or as a
                two-segment spline, when applied to an edge. In both cases the proportions of the colors are determined by their weights.
            </summary>
            <param name="color1">
                The first color to initialize the instance with.
            </param>
            <param name="weight1">
                The proportion of the area to cover with the first color (it must be in the range 0 ≤ weight &lt; 1).
            </param>
            <param name="color2">
                The second color to initialize the instance with.
            </param>
            <param name="weight2">
                The proportion of the area to cover with the second color (it must be in the range 0 ≤ weight &lt; 1).
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotMultiColor.Dual(GiGraph.Dot.Types.Colors.DotColor,System.Double,GiGraph.Dot.Types.Colors.DotColor)">
            <summary>
                Creates a new color definition visualized as a dual-color fill (refers to the root graph, nodes, and clusters), or as a
                two-segment spline, when applied to an edge. In both cases the proportions of the colors are determined by their weights.
            </summary>
            <param name="color1">
                The first color to initialize the instance with.
            </param>
            <param name="weight1">
                The proportion of the area to cover with the first color (it must be in the range 0 ≤ weight &lt; 1).
            </param>
            <param name="color2">
                The second color to initialize the instance with.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotMultiColor.Dual(GiGraph.Dot.Types.Colors.DotColor,GiGraph.Dot.Types.Colors.DotColor,System.Double)">
            <summary>
                Creates a new color definition visualized as a dual-color fill (refers to the root graph, nodes, and clusters), or as a
                two-segment spline, when applied to an edge. In both cases the proportions of the colors are determined by their weights.
            </summary>
            <param name="color1">
                The first color to initialize the instance with.
            </param>
            <param name="color2">
                The second color to initialize the instance with.
            </param>
            <param name="weight2">
                The proportion of the area to cover with the second color (it must be in the range 0 ≤ weight &lt; 1).
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Colors.DotWeightedColor">
            <summary>
                Represents a weighted color for use in color lists only (<see cref="T:GiGraph.Dot.Types.Colors.DotMultiColor" />).
            </summary>
            <param name="Color">
                The color to initialize the instance with.
            </param>
            <param name="Weight">
                The weight of the color in the range 0 ≤ <paramref name="Weight" /> ≤ 1. Represents the proportion of the area covered with
                the specified color.
            </param>
            <param name="Scheme">
                <para>
                    The color scheme to evaluate the current color with if a named color is specified. See <see cref="T:GiGraph.Dot.Types.Colors.DotColorSchemes" /> for
                    supported scheme names.
                </para>
                <para>
                    Pass null to use the color scheme set on the element, or to use the default scheme if none was set. Pass
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.Default" /> to make the color be evaluated using the default
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.X11" /> naming.
                </para>
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotWeightedColor.#ctor(System.Drawing.Color,System.Double,System.String)">
            <summary>
                Represents a weighted color for use in color lists only (<see cref="T:GiGraph.Dot.Types.Colors.DotMultiColor" />).
            </summary>
            <param name="Color">
                The color to initialize the instance with.
            </param>
            <param name="Weight">
                The weight of the color in the range 0 ≤ <paramref name="Weight" /> ≤ 1. Represents the proportion of the area covered with
                the specified color.
            </param>
            <param name="Scheme">
                <para>
                    The color scheme to evaluate the current color with if a named color is specified. See <see cref="T:GiGraph.Dot.Types.Colors.DotColorSchemes" /> for
                    supported scheme names.
                </para>
                <para>
                    Pass null to use the color scheme set on the element, or to use the default scheme if none was set. Pass
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.Default" /> to make the color be evaluated using the default
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.X11" /> naming.
                </para>
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotWeightedColor.#ctor(System.String,System.Double,System.String)">
            <summary>
                Creates a new instance initialized with a named color.
            </summary>
            <param name="name">
                The color name to initialize the instance with. The name will be evaluated in the context of the <paramref name="scheme" />
                if specified, in the context of the scheme applied to the current element if any, or in the context of the default
                <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.X11" /> scheme otherwise.
            </param>
            <param name="weight">
                The weight of the color in the range 0 ≤ <paramref name="weight" /> ≤ 1. Represents the proportion of the area covered with
                the specified color.
            </param>
            <param name="scheme">
                <para>
                    The color scheme to evaluate the current color with if a named color is specified. See <see cref="T:GiGraph.Dot.Types.Colors.DotColorSchemes" /> for
                    supported scheme names.
                </para>
                <para>
                    Pass null to use the color scheme set on the element, or to use the default scheme if none was set. Pass
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.Default" /> to make the color be evaluated using the default
                    <see cref="F:GiGraph.Dot.Types.Colors.DotColorSchemes.X11" /> naming.
                </para>
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotWeightedColor.#ctor(GiGraph.Dot.Types.Colors.DotColor,System.Double)">
            <summary>
                Creates a new instance initialized with a color and a weight.
            </summary>
            <param name="color">
                The color to initialize the instance with.
            </param>
            <param name="weight">
                The weight of the color in the range 0 ≤ <paramref name="weight" /> ≤ 1. Represents the proportion of the area covered with
                the specified color.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Colors.DotWeightedColor.Weight">
            <summary>
                The weight of the color in the range 0 ≤ <see cref="P:GiGraph.Dot.Types.Colors.DotWeightedColor.Weight" /> ≤ 1. Represents the proportion of the area covered with that
                color.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Edges.DotCompassPoint">
            <summary>
                Modifies the edge placement to aim for the corresponding compass point on the port, or if no port name is supplied, on the
                node itself.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotCompassPoint.Default">
            <summary>
                Specifies that an appropriate side of the port adjacent to the exterior of the node should be used, if such exists.
                Otherwise, <see cref="F:GiGraph.Dot.Types.Edges.DotCompassPoint.Center" /> is used.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotCompassPoint.Center">
            <summary>
                Specifies the center of the node or port.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotCompassPoint.North">
            <summary>
                Specifies the northern side of the node or port.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotCompassPoint.NorthEast">
            <summary>
                Specifies the north-eastern side of the node or port.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotCompassPoint.East">
            <summary>
                Specifies the eastern side of the node or port.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotCompassPoint.SouthEast">
            <summary>
                Specifies the south-eastern side of the node or port.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotCompassPoint.South">
            <summary>
                Specifies the southern side of the node or port.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotCompassPoint.SouthWest">
            <summary>
                Specifies the south-western side of the node or port.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotCompassPoint.West">
            <summary>
                Specifies the western side of the node or port.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotCompassPoint.NorthWest">
            <summary>
                Specifies the north-western side of the node or port.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Edges.DotEdgeDirections">
            <summary>
                The arrow direction.
                <see href="https://www.graphviz.org/doc/info/attrs.html#k:dirType">
                    View how individual arrow directions are visualized
                </see>
                .
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeDirections.None">
            <summary>
                Draws an edge with no arrows.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeDirections.Backward">
            <summary>
                Draws an edge with one arrow pointing at the tail node.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeDirections.Forward">
            <summary>
                Draws an edge with one arrow pointing at the head node.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeDirections.Both">
            <summary>
                Draws an edge with two arrows: one pointing at the tail node, and the other pointing at the head node.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Edges.DotEdgeHyperlink">
            <summary>
                Specifies hyperlink attributes (edge specific).
            </summary>
            <param name="Url">
                The URL.
            </param>
            <param name="Target">
                Determines which window of the browser is used for the URL. See
                <see cref="T:GiGraph.Dot.Types.Hyperlinks.DotHyperlinkTargets" />.
            </param>
            <param name="Tooltip">
                Tooltip annotation.
            </param>
            <param name="Href">
                Synonym for <paramref name="Url" />.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Edges.DotEdgeHyperlink.#ctor(GiGraph.Dot.Types.EscapeString.DotEscapeString,GiGraph.Dot.Types.EscapeString.DotEscapeString,GiGraph.Dot.Types.EscapeString.DotEscapeString,GiGraph.Dot.Types.EscapeString.DotEscapeString)">
            <summary>
                Specifies hyperlink attributes (edge specific).
            </summary>
            <param name="Url">
                The URL.
            </param>
            <param name="Target">
                Determines which window of the browser is used for the URL. See
                <see cref="T:GiGraph.Dot.Types.Hyperlinks.DotHyperlinkTargets" />.
            </param>
            <param name="Tooltip">
                Tooltip annotation.
            </param>
            <param name="Href">
                Synonym for <paramref name="Url" />.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Edges.DotEdgeOrderingMode">
            <summary>
                The edge ordering mode.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeOrderingMode.OutgoingEdges">
            <summary>
                The outedges of a node, that is, edges with the node as their tail node, must appear left-to-right in the same order in which
                they are defined in the input.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeOrderingMode.IncomingEdges">
            <summary>
                The inedges of a node, that is, edges with the node as their head node, must appear left-to-right in the same order in which
                they are defined in the input.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Edges.DotEdgeShape">
            <summary>
                Controls how, and if, edges are represented.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeShape.None">
            <summary>
                No edges are drawn.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeShape.Line">
            <summary>
                Edges are drawn as line segments.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeShape.Polyline">
            <summary>
                Edges are drawn as polylines.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeShape.Curved">
            <summary>
                Edges are drawn as curved arcs.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeShape.Orthogonal">
            <summary>
                Edges are routed as polylines of axis-aligned segments. Currently, the routing does not handle ports or, in DOT, edge labels.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeShape.Spline">
            <summary>
                Edges are drawn as splines routed around nodes.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Edges.DotEdgeShape.Compound">
            <summary>
                Edges are drawn to avoid clusters as well as nodes.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Edges.DotEdgeStyleProperties">
            <summary>
                Edge style options.
            </summary>
            <param name="LineStyle">
                A line style.
            </param>
            <param name="LineWeight">
                A line weight.
            </param>
            <param name="Invisible">
                Determines whether the element is invisible.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Edges.DotEdgeStyleProperties.#ctor(GiGraph.Dot.Types.Styling.DotLineStyle,GiGraph.Dot.Types.Styling.DotLineWeight,System.Boolean)">
            <summary>
                Edge style options.
            </summary>
            <param name="LineStyle">
                A line style.
            </param>
            <param name="LineWeight">
                A line weight.
            </param>
            <param name="Invisible">
                Determines whether the element is invisible.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Edges.DotEndpointPort">
            <summary>
                Represents the endpoint port, that is a point on a node an edge is attached to.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Edges.DotEndpointPort.#ctor">
            <summary>
                Represents the endpoint port, that is a point on a node an edge is attached to.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Edges.DotEndpointPort.#ctor(System.String)">
            <summary>
                Creates a new instance of the port, initialized with a port name.
            </summary>
            <param name="name">
                Determines the edge placement to aim for the specified port. The corresponding node must either have record shape (
                <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Record" />, <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.RoundedRecord" />) with one of its fields having the given port
                name, or have an HTML-like label, one of whose components has a PORT attribute set to the specified port name.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Edges.DotEndpointPort.#ctor(System.Nullable{GiGraph.Dot.Types.Edges.DotCompassPoint})">
            <summary>
                Creates a new instance of the port, initialized with a compass point.
            </summary>
            <param name="compassPoint">
                Determines the edge placement to aim for the specified compass point on a node.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Edges.DotEndpointPort.#ctor(System.String,System.Nullable{GiGraph.Dot.Types.Edges.DotCompassPoint})">
            <summary>
                Creates a new instance of the port, initialized with a port name and a compass point.
            </summary>
            <param name="name">
                Determines the edge placement to aim for the specified port. The corresponding node must either have record shape (
                <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Record" />, <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.RoundedRecord" />) with one of its fields having the given port
                name, or have an HTML-like label, one of whose components has a PORT attribute set to the specified port name.
            </param>
            <param name="compassPoint">
                Determines the edge placement to aim for the specified compass point on the <paramref name="name" /> port.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Edges.DotEndpointPort.Name">
            <summary>
                Modifies the edge placement to aim for the specified port. If specified, the corresponding node must either have a record
                shape (<see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Record" /> or <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.RoundedRecord" />) with one of its fields having the
                given port name, or have an HTML-like label, one of whose components has a PORT attribute set to the specified port name.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Edges.DotEndpointPort.CompassPoint">
            <summary>
                <para>
                    Modifies the edge placement to aim for the specified compass point on the <see cref="P:GiGraph.Dot.Types.Edges.DotEndpointPort.Name" /> port if specified, or on
                    the node itself otherwise.
                </para>
                <para>
                    If no compass point is specified explicitly, the default value is <see cref="F:GiGraph.Dot.Types.Edges.DotCompassPoint.Center" />.
                </para>
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Edges.DotEndpointPort.Default">
            <summary>
                Creates a new endpoint port with no properties specified.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Encoders.DotDoubleListEncoder">
            <summary>
                A double list DOT encoder.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EnumHelpers.DotPartialEnumMapper.ToPartial``2(``0)">
            <summary>
                Gets a bitmask composed of only those bits from the complete bitmask that the partial bitmask enum is able to set.
            </summary>
            <param name="complete">
                The complete type to strip off with bits outside the range of the partial type.
            </param>
            <typeparam name="TComplete">
                The complete bitmask enum type.
            </typeparam>
            <typeparam name="TPartial">
                The partial bitmask enum type.
            </typeparam>
        </member>
        <member name="M:GiGraph.Dot.Types.EnumHelpers.DotPartialEnumMapper.ToComplete``2(``0,``1)">
            <summary>
                Merges the partial bitmask enum into the complete bitmask by overwriting the bits of the complete type, that exist as values
                of the partial bitmask enum. Returns the merged complete value.
            </summary>
            <param name="partial">
                The partial type to merge into the complete one.
            </param>
            <param name="complete">
                The complete value whose selection of bits to overwrite with those set in the partial type enum.
            </param>
            <typeparam name="TPartial">
                The partial bitmask enum type.
            </typeparam>
            <typeparam name="TComplete">
                The complete bitmask enum type.
            </typeparam>
        </member>
        <member name="T:GiGraph.Dot.Types.EscapeString.DotConcatenatedEscapeString">
            <summary>
                Represents a collection of escape string instances.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotConcatenatedEscapeString.#ctor(GiGraph.Dot.Types.EscapeString.DotEscapeString[])">
            <summary>
                Creates a new concatenated escape string instance.
            </summary>
            <param name="items">
                The escape strings to initialize the instance with.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotConcatenatedEscapeString.#ctor(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.EscapeString.DotEscapeString})">
            <summary>
                Creates a new concatenated escape string instance.
            </summary>
            <param name="items">
                The escape strings to initialize the instance with.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotConcatenatedEscapeString.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Creates a new concatenated escape string instance.
            </summary>
            <param name="items">
                The escape strings to initialize the instance with.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotConcatenatedEscapeString.GetEnumerator">
            <summary>
                Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotConcatenatedEscapeString.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Returns an enumerator that iterates through a collection.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.EscapeString.DotEscapedString">
            <summary>
                An escaped string to be rendered as is on output DOT script generation. It should follow the formatting rules described in
                the
                <see href="http://www.graphviz.org/doc/info/attrs.html#k:escString">
                    documentation
                </see>
                .
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapedString.#ctor(System.String)">
            <summary>
                Initializes a new instance.
            </summary>
            <param name="value">
                The escaped string to initialize the instance with.
            </param>
            <exception cref="T:System.ArgumentNullException">
                Thrown when the <paramref name="value" /> is null.
            </exception>
        </member>
        <member name="T:GiGraph.Dot.Types.EscapeString.DotEscapeString">
            <summary>
                Represents the DOT escape string (<see href="http://www.graphviz.org/doc/info/attrs.html#k:escString" />).
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.ToString">
            <summary>
                Returns the underlying string.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.EscapeString.DotEscapeString.GraphId">
            <summary>
                An escape sequence replaced with graph identifier on graph visualization.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.EscapeString.DotEscapeString.NodeId">
            <summary>
                An escape sequence replaced with the identifier of the current node on graph visualization.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.EscapeString.DotEscapeString.EdgeDefinition">
            <summary>
                An escape sequence replaced with the definition of the current edge on graph visualization.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.EscapeString.DotEscapeString.TailNodeId">
            <summary>
                An escape sequence replaced with the identifier of the tail node of the current edge on graph visualization.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.EscapeString.DotEscapeString.HeadNodeId">
            <summary>
                An escape sequence replaced with the identifier of the head node of the current edge on graph visualization.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.EscapeString.DotEscapeString.Label">
            <summary>
                An escape sequence replaced with the label of the current element on graph visualization.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.EscapeString.DotEscapeString.LineBreak">
            <summary>
                An escape sequence interpreted as a line break.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.EscapeString.DotEscapeString.LeftJustification">
            <summary>
                An escape sequence that causes the line of text that precedes it to be left-justified.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.EscapeString.DotEscapeString.RightJustification">
            <summary>
                An escape sequence that causes the line of text that precedes it to be right-justified.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.JustifyLeft(GiGraph.Dot.Types.EscapeString.DotEscapeString)">
            <summary>
                Returns left-justified text.
            </summary>
            <param name="text">
                The text to justify.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.JustifyRight(GiGraph.Dot.Types.EscapeString.DotEscapeString)">
            <summary>
                Returns right-justified text.
            </summary>
            <param name="text">
                The text to justify.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.FromString(System.String)">
            <summary>
                Creates a new instance initialized with the specified text. The text will be escaped on output DOT script generation.
            </summary>
            <param name="value">
                The string to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.FromEscapedString(System.String)">
            <summary>
                Creates a new instance initialized with escaped string. The string will not be modified in any way on output DOT script
                generation, so it must follow the formatting rules described in the
                <see href="http://www.graphviz.org/doc/info/attrs.html#k:escString">
                    documentation
                </see>
                .
            </summary>
            <param name="value">
                The string to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.Concat(GiGraph.Dot.Types.EscapeString.DotEscapeString[])">
            <summary>
                Concatenates the specified escape strings.
            </summary>
            <param name="items">
                The escape string items to concatenate.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.Concat(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.EscapeString.DotEscapeString})">
            <summary>
                Concatenates the specified escape strings.
            </summary>
            <param name="items">
                The escape string items to concatenate.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.Concat(System.String[])">
            <summary>
                Concatenates the specified escape strings.
            </summary>
            <param name="items">
                The escape string items to concatenate.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.Concat(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Concatenates the specified escape strings.
            </summary>
            <param name="items">
                The escape string items to concatenate.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.ConcatEscapedStrings(System.String[])">
            <summary>
                Concatenates the specified escaped strings. The component strings will not be modified in any way on output DOT script
                generation, so they must follow the formatting rules described in the
                <see href="http://www.graphviz.org/doc/info/attrs.html#k:escString">
                    documentation
                </see>
                .
            </summary>
            <param name="items">
                The string to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.ConcatEscapedStrings(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Concatenates the specified escaped strings. The component strings will not be modified in any way on output DOT script
                generation, so they must follow the formatting rules described in the
                <see href="http://www.graphviz.org/doc/info/attrs.html#k:escString">
                    documentation
                </see>
                .
            </summary>
            <param name="items">
                The string to use.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder">
            <summary>
                Facilitates building text with escape sequences that format its lines or hold a place for identifiers filled in on graph
                visualization. The output generated by the <see cref="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.Build" /> method may be assigned to a label attribute of an element or
                to any <see cref="T:GiGraph.Dot.Types.EscapeString.DotEscapeString" /> type attributes.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.#ctor">
            <summary>
                Creates a new instance.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.#ctor(GiGraph.Dot.Types.EscapeString.DotEscapeString)">
            <summary>
                Creates a new instance initialized with text.
            </summary>
            <param name="text">
                The text to initialize the instance with.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.Count">
            <summary>
                Gets the number of items in this builder.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.Append(GiGraph.Dot.Types.EscapeString.DotEscapeString)">
            <summary>
                Appends the specified text to the instance.
            </summary>
            <param name="text">
                The text to append to the instance.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.AppendLine">
            <summary>
                Appends a line break to the instance.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.AppendLine(GiGraph.Dot.Types.EscapeString.DotEscapeString)">
            <summary>
                Appends the specified line of text to the instance.
            </summary>
            <param name="line">
                The line of text to append to the instance.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.AppendLeftJustifiedLine(GiGraph.Dot.Types.EscapeString.DotEscapeString)">
            <summary>
                Appends the specified line of text to the instance and marks it as left-justified (if the text contains line breaks,
                justification will be applied to the last line only on graph visualization).
            </summary>
            <param name="line">
                The line of text to append to the instance.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.AppendRightJustifiedLine(GiGraph.Dot.Types.EscapeString.DotEscapeString)">
            <summary>
                Appends the specified line of text to the instance and marks it as right-justified (if the text contains line breaks,
                justification will be applied to the last line only on graph visualization).
            </summary>
            <param name="line">
                The line of text to append to the instance.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.LeftJustifyLine">
            <summary>
                <para>
                    Causes the preceding line of text to be left-justified.
                </para>
                <para>
                    Note that if further text is added to the instance after the method is called, it will appear in a new line.
                </para>
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.RightJustifyLine">
            <summary>
                <para>
                    Causes the preceding line of text to be right-justified.
                </para>
                <para>
                    Note that if further text is added to the instance after the method is called, it will appear in a new line.
                </para>
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.AppendLabel">
            <summary>
                Appends a placeholder replaced with the label of the current object when the graph is visualized.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.AppendGraphId">
            <summary>
                Appends a placeholder replaced with the identifier of the graph when the graph is visualized.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.AppendEdgeDefinition">
            <summary>
                Appends a placeholder replaced with the definition of the current edge when the graph is visualized. Applicable to edges
                only.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.AppendTailNodeId">
            <summary>
                Appends a placeholder replaced with the identifier of the tail node of the current edge when the graph is visualized.
                Applicable to edges only.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.AppendHeadNodeId">
            <summary>
                Appends a placeholder replaced with the identifier of the head node of the current edge when the graph is visualized.
                Applicable to edges only.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.AppendNodeId">
            <summary>
                Appends a placeholder replaced with the identifier of the current node when the graph is visualized. Applicable to nodes
                only.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.ToString">
            <summary>
                Returns content as a concatenated string.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder.Build">
            <summary>
                Returns content as formatted text that can be used as a label of an element.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.EscapeString.DotUnescapedString">
            <summary>
                A string to be escaped on output DOT script generation.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotUnescapedString.#ctor(System.String)">
            <summary>
                Initializes a new instance.
            </summary>
            <param name="value">
                The unescaped string to initialize the instance with.
            </param>
            <exception cref="T:System.ArgumentNullException">
                Thrown when the <paramref name="value" /> is null.
            </exception>
        </member>
        <member name="T:GiGraph.Dot.Types.Fonts.DotFont">
            <summary>
                Font attributes.
            </summary>
            <param name="Name">
                Font name.
            </param>
            <param name="Size">
                Font size.
            </param>
            <param name="Color">
                Font color.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Fonts.DotFont.#ctor(System.String,System.Nullable{System.Double},GiGraph.Dot.Types.Colors.DotColor)">
            <summary>
                Font attributes.
            </summary>
            <param name="Name">
                Font name.
            </param>
            <param name="Size">
                Font size.
            </param>
            <param name="Color">
                Font color.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Fonts.DotFont.#ctor(System.Double,GiGraph.Dot.Types.Colors.DotColor)">
            <summary>
                Creates and initializes a new instance.
            </summary>
            <param name="size">
                Font size.
            </param>
            <param name="color">
                Font color.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Fonts.DotFont.#ctor(GiGraph.Dot.Types.Colors.DotColor,System.String)">
            <summary>
                Creates and initializes a new instance.
            </summary>
            <param name="color">
                Font color.
            </param>
            <param name="name">
                Font name.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Fonts.DotFont.Name">
            <summary>
                The font name.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Fonts.DotFont.Size">
            <summary>
                The font size.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Fonts.DotFont.Color">
            <summary>
                The font color.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Fonts.DotFontConvention">
            <summary>
                SVG output font conventions.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Fonts.DotFontConvention.Svg">
            <summary>
                When specified, the output will try to use known SVG font names. For example, the default font, Times-Roman, will be mapped
                to the basic SVG font serif.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Fonts.DotFontConvention.PostScript">
            <summary>
                When specified, the output will try to use known PostScript font names such as Times-Roman. Useful with SVG viewers that
                support this richer font name space.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Fonts.DotFontConvention.Fontconfig">
            <summary>
                When specified, the output will try to use Fontconfig font conventions. For example, Times-Roman would be treated as Nimbus
                Roman No9 L. Useful with SVG viewers that support this richer font name space.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Fonts.DotFontStyles">
            <summary>
                Font styles.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Fonts.DotFontStyles.Normal">
            <summary>
                Normal style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Fonts.DotFontStyles.Bold">
            <summary>
                Bold style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Fonts.DotFontStyles.Italic">
            <summary>
                Italic style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Fonts.DotFontStyles.Underline">
            <summary>
                Underlined style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Fonts.DotFontStyles.Overline">
            <summary>
                Overline style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Fonts.DotFontStyles.Subscript">
            <summary>
                Subscript style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Fonts.DotFontStyles.Superscript">
            <summary>
                Superscript style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Fonts.DotFontStyles.Strikethrough">
            <summary>
                Strikethrough style.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Fonts.DotStyledFont">
            <summary>
                Font and style attributes.
            </summary>
            <param name="Style">
                Font style.
            </param>
            <param name="Name">
                Font name.
            </param>
            <param name="Size">
                Font size.
            </param>
            <param name="Color">
                Font color.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Fonts.DotStyledFont.#ctor(System.Nullable{GiGraph.Dot.Types.Fonts.DotFontStyles},System.String,System.Nullable{System.Double},GiGraph.Dot.Types.Colors.DotColor)">
            <summary>
                Font and style attributes.
            </summary>
            <param name="Style">
                Font style.
            </param>
            <param name="Name">
                Font name.
            </param>
            <param name="Size">
                Font size.
            </param>
            <param name="Color">
                Font color.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Fonts.DotStyledFont.#ctor(System.Nullable{GiGraph.Dot.Types.Fonts.DotFontStyles},System.Nullable{System.Double},GiGraph.Dot.Types.Colors.DotColor)">
            <summary>
                Creates and initializes a new instance.
            </summary>
            <param name="style">
                Font style.
            </param>
            <param name="size">
                Font size.
            </param>
            <param name="color">
                Font color.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Fonts.DotStyledFont.#ctor(System.Nullable{GiGraph.Dot.Types.Fonts.DotFontStyles},GiGraph.Dot.Types.Colors.DotColor,System.String)">
            <summary>
                Creates and initializes a new instance.
            </summary>
            <param name="style">
                Font style.
            </param>
            <param name="color">
                Font color.
            </param>
            <param name="name">
                Font name.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Fonts.DotStyledFont.#ctor(GiGraph.Dot.Types.Fonts.DotFont,System.Nullable{GiGraph.Dot.Types.Fonts.DotFontStyles})">
            <summary>
                Creates and initializes a new instance.
            </summary>
            <param name="font">
                A source font to copy attributes from.
            </param>
            <param name="style">
                Font style.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Fonts.DotStyledFont.Style">
            <summary>
                The font style.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Geometry.DotPoint">
            <summary>
                Represents a point in an n-dimensional plain.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotPoint.#ctor(System.Nullable{System.Boolean},System.Double[])">
            <summary>
                Creates and initializes a new point in an n-dimensional plain.
            </summary>
            <param name="isFixed">
                Determines whether the node position (if applied to nodes) should not change (input-only).
            </param>
            <param name="coordinates">
                The coordinates of the point.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotPoint.#ctor(System.Collections.Generic.IEnumerable{System.Double},System.Nullable{System.Boolean})">
            <summary>
                Creates and initializes a new point in an n-dimensional plain.
            </summary>
            <param name="coordinates">
                The coordinates of the point.
            </param>
            <param name="isFixed">
                Determines whether the node position (if applied to nodes) should not change (input-only).
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotPoint.#ctor(System.Double[])">
            <summary>
                Creates and initializes a new point in an n-dimensional plain.
            </summary>
            <param name="coordinates">
                The coordinates of the point.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotPoint.#ctor(System.Double,System.Nullable{System.Boolean})">
            <summary>
                Creates and initializes a new single-value point that, depending on the context, may be interpreted as an equal value for
                every component of the attribute the point is assigned to (e.g. padding or margin).
            </summary>
            <param name="value">
                The value to use.
            </param>
            <param name="isFixed">
                Determines whether the node position (if applied to nodes) should not change (input-only).
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotPoint.#ctor(System.Double,System.Double,System.Nullable{System.Boolean})">
            <summary>
                Creates and initializes a new point in a two-dimensional plain.
            </summary>
            <param name="x">
                The x-coordinate of the point.
            </param>
            <param name="y">
                The y-coordinate of the point.
            </param>
            <param name="isFixed">
                Determines whether the node position (if applied to nodes) should not change (input-only).
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotPoint.#ctor(System.Drawing.Point,System.Nullable{System.Boolean})">
            <summary>
                Creates and initializes a new point in a two-dimensional plain.
            </summary>
            <param name="point">
                The <see cref="T:System.Drawing.Point" /> to initialize the instance with.
            </param>
            <param name="isFixed">
                Determines whether the node position (if applied to nodes) should not change (input-only).
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotPoint.#ctor(System.Drawing.PointF,System.Nullable{System.Boolean})">
            <summary>
                Creates and initializes a new point in a two-dimensional plain.
            </summary>
            <param name="point">
                The <see cref="T:System.Drawing.PointF" /> to initialize the instance with.
            </param>
            <param name="isFixed">
                Determines whether the node position (if applied to nodes) should not change (input-only).
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Geometry.DotPoint.Coordinates">
            <summary>
                The coordinates of the point.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Geometry.DotPoint.IsFixed">
            <summary>
                Determines whether the node position (if applied to nodes) should not change (input-only).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Geometry.DotPolygon">
            <summary>
                Geometry attributes of a polygonal shape.
            </summary>
            <param name="Sides">
                Number of sides.
            </param>
            <param name="Regular">
                Determines whether the shape is regular.
            </param>
            <param name="Peripheries">
                Number of peripheries.
            </param>
            <param name="Rotation">
                Rotation angle.
            </param>
            <param name="Skew">
                Skew factor.
            </param>
            <param name="Distortion">
                Distortion factor.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotPolygon.#ctor(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
                Geometry attributes of a polygonal shape.
            </summary>
            <param name="Sides">
                Number of sides.
            </param>
            <param name="Regular">
                Determines whether the shape is regular.
            </param>
            <param name="Peripheries">
                Number of peripheries.
            </param>
            <param name="Rotation">
                Rotation angle.
            </param>
            <param name="Skew">
                Skew factor.
            </param>
            <param name="Distortion">
                Distortion factor.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Geometry.DotRectangle">
            <summary>
                A rectangle.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotRectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Initializes a new rectangle instance.
            </summary>
            <param name="x">
                The x-coordinate of the lower-left corner in points.
            </param>
            <param name="y">
                The y-coordinate of the lower-left corner in points.
            </param>
            <param name="width">
                The width in points.
            </param>
            <param name="height">
                The height in points.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotRectangle.#ctor(System.Drawing.Rectangle)">
            <summary>
                Initializes a new rectangle instance.
            </summary>
            <param name="rectangle">
                The source rectangle.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotRectangle.#ctor(System.Drawing.RectangleF)">
            <summary>
                Initializes a new rectangle instance.
            </summary>
            <param name="rectangle">
                The source rectangle.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Geometry.DotRectangle.X">
            <summary>
                The x-coordinate of the lower-left corner in points.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Geometry.DotRectangle.Y">
            <summary>
                The y-coordinate of the lower-left corner in points.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Geometry.DotRectangle.Width">
            <summary>
                The width in points.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Geometry.DotRectangle.Height">
            <summary>
                The height in points.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Geometry.DotSize">
            <summary>
                Size attributes.
            </summary>
            <param name="Width">
                The width.
            </param>
            <param name="Height">
                The height.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotSize.#ctor(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
                Size attributes.
            </summary>
            <param name="Width">
                The width.
            </param>
            <param name="Height">
                The height.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Graphs.DotGraphFont">
            <summary>
                Font attributes (graph specific).
            </summary>
            <param name="Name">
                Font name.
            </param>
            <param name="Size">
                Font size.
            </param>
            <param name="Color">
                Font color.
            </param>
            <param name="Directories">
                The directory list to search for fonts.
            </param>
            <param name="Convention">
                The font convention to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Graphs.DotGraphFont.#ctor(System.String,System.Nullable{System.Double},GiGraph.Dot.Types.Colors.DotColor,System.String,System.Nullable{GiGraph.Dot.Types.Fonts.DotFontConvention})">
            <summary>
                Font attributes (graph specific).
            </summary>
            <param name="Name">
                Font name.
            </param>
            <param name="Size">
                Font size.
            </param>
            <param name="Color">
                Font color.
            </param>
            <param name="Directories">
                The directory list to search for fonts.
            </param>
            <param name="Convention">
                The font convention to use.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Graphs.DotGraphScaling">
            <summary>
                Graph scaling options for the drawing.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Graphs.DotGraphScaling.Auto">
            <summary>
                If the graph page attribute is set and the graph cannot be drawn on a single page, then size is set to an "ideal" value. In
                particular, the size in a given dimension will be the smallest integral multiple of the page size in that dimension which is
                at least half the current size. The two dimensions are then scaled independently to the new size. This feature only works in
                dot.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Graphs.DotGraphScaling.Fill">
            <summary>
                If the size attribute is set on graph's canvas, node positions are scaled, separately in both x and y, so that the final
                drawing exactly fills the specified size. If both size values exceed the width and height of the drawing, then both
                coordinate values of each node are scaled up accordingly. However, if either size dimension is smaller than the corresponding
                dimension in the drawing, one dimension is scaled up so that the final drawing has the same aspect ratio as specified by
                size. Then, when rendered, the layout will be scaled down uniformly in both dimensions to fit the given size, which may cause
                nodes and text to shrink as well. This may not be what the user wants, but it avoids the hard problem of how to reposition
                the nodes in an acceptable fashion to reduce the drawing size.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Graphs.DotGraphScaling.Compress">
            <summary>
                If the size attribute is set on graph's canvas, dot attempts to compress the initial layout to fit in the given size. This
                achieves a tighter packing of nodes but reduces the balance and symmetry. This feature only works in dot.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Graphs.DotGraphScaling.Expand">
            <summary>
                If the size attribute is set on graph's canvas, and both the width and the height of the graph are less than the value in
                size, node positions are scaled uniformly until at least one dimension fits the size exactly. Note that this is distinct from
                using size as the desired size, as here the drawing is expanded before edges are generated and all node and text sizes remain
                unchanged.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Graphs.DotGraphScalingAspectRatio">
            <summary>
                The aspect ratio of the graph. If ratio = x where x is a floating point number, then the drawing is scaled up in one
                dimension to achieve the requested ratio expressed as drawing height/width. For example, ratio = 2.0 makes the drawing twice
                as high as it is wide.
            </summary>
            <param name="Ratio">
                The aspect ratio.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Graphs.DotGraphScalingAspectRatio.#ctor(System.Double)">
            <summary>
                The aspect ratio of the graph. If ratio = x where x is a floating point number, then the drawing is scaled up in one
                dimension to achieve the requested ratio expressed as drawing height/width. For example, ratio = 2.0 makes the drawing twice
                as high as it is wide.
            </summary>
            <param name="Ratio">
                The aspect ratio.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Graphs.DotGraphScalingDefinition">
            <summary>
                Represents the scaling mode of the graph. Accepts either a numeric value (<see cref="T:GiGraph.Dot.Types.Graphs.DotGraphScalingAspectRatio" />), or an
                enumeration value (<see cref="T:GiGraph.Dot.Types.Graphs.DotGraphScaling" />).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Graphs.DotGraphScalingOption">
            <summary>
                Scaling mode of the graph drawing.
            </summary>
            <param name="Option">
                The scaling option.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Graphs.DotGraphScalingOption.#ctor(GiGraph.Dot.Types.Graphs.DotGraphScaling)">
            <summary>
                Scaling mode of the graph drawing.
            </summary>
            <param name="Option">
                The scaling option.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Graphs.DotGraphStyleProperties">
            <summary>
                Graph style options.
            </summary>
            <param name="FillStyle">
                The fill style for graph and clusters. The only option applicable to the root graph is
                <see cref="F:GiGraph.Dot.Types.Clusters.DotClusterFillStyle.Radial" />.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Graphs.DotGraphStyleProperties.#ctor(GiGraph.Dot.Types.Clusters.DotClusterFillStyle)">
            <summary>
                Graph style options.
            </summary>
            <param name="FillStyle">
                The fill style for graph and clusters. The only option applicable to the root graph is
                <see cref="F:GiGraph.Dot.Types.Clusters.DotClusterFillStyle.Radial" />.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Html.DotHtmlString">
            <summary>
                Represents an HTML string. The value should be a compatible HTML string following the rules described in the
                <see href="http://www.graphviz.org/doc/info/shapes.html#html">
                    documentation
                </see>
                .
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Html.DotHtmlString.#ctor(System.String)">
            <summary>
                Initializes a new instance.
            </summary>
            <param name="html">
                The HTML string to initialize the instance with.
            </param>
            <exception cref="T:System.ArgumentNullException">
                Thrown when the <paramref name="html" /> is null.
            </exception>
        </member>
        <member name="T:GiGraph.Dot.Types.Html.Table.DotHtmlTableBorders">
            <summary>
                The sides of a border of an HTML table or cell.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableBorders.Top">
            <summary>
                The top border.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableBorders.Right">
            <summary>
                The right border.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableBorders.Bottom">
            <summary>
                The bottom border.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableBorders.Left">
            <summary>
                The left border.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableBorders.Horizontal">
            <summary>
                The top and bottom borders.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableBorders.Vertical">
            <summary>
                The left and right borders.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableBorders.All">
            <summary>
                All borders.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Html.Table.DotHtmlTableCellHorizontalAlignment">
            <summary>
                The justification options for HTML table cells.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableCellHorizontalAlignment.Left">
            <summary>
                Places the label at the left side of the element.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableCellHorizontalAlignment.Center">
            <summary>
                Places the label at the horizontal center of the element.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableCellHorizontalAlignment.Right">
            <summary>
                Places the label at the right side of the element.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableCellHorizontalAlignment.Justify">
            <summary>
                <para>
                    Aligns lines of text using the full cell width. The alignment of a line is determined by its (possibly implicit)
                    associated &lt;br/&gt; element (line break). If the cell contains lines of text, then they are justified using the entire
                    available width of the cell. If the cell does not contain text, then the contained image or table is centered.
                </para>
                <para>
                    Applicable to HTML table cell only (&lt;td&gt;).
                </para>
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Html.Table.DotHtmlTableColumnFormat">
            <summary>
                Provides general formatting information concerning HTML table columns.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableColumnFormat.VerticalRule">
            <summary>
                Causes a vertical rule to appear between every cell in every row.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Html.Table.DotHtmlTableRowFormat">
            <summary>
                Provides general formatting information concerning HTML table rows.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableRowFormat.HorizontalRule">
            <summary>
                Causes a horizontal rule to appear between every row.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Html.Table.DotHtmlTableStyles">
            <summary>
                The sides of a border of an HTML table or cell.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableStyles.Rounded">
            <summary>
                The table will have rounded corners. This probably works best if the outmost cells have no borders, or their cell spacing is
                sufficiently large. If it is desirable to have borders around the cells, use HR and VR elements, or the column and row
                formatting attributes of the table.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Html.Table.DotHtmlTableStyles.Radial">
            <summary>
                The table will have a radial gradient fill if specified for the table background.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Hyperlinks.DotHyperlink">
            <summary>
                Specifies hyperlink attributes.
            </summary>
            <param name="Url">
                The URL.
            </param>
            <param name="Target">
                Determines which window of the browser is used for the URL. See
                <see cref="T:GiGraph.Dot.Types.Hyperlinks.DotHyperlinkTargets" />.
            </param>
            <param name="Href">
                Synonym for <paramref name="Url" />.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Hyperlinks.DotHyperlink.#ctor(GiGraph.Dot.Types.EscapeString.DotEscapeString,GiGraph.Dot.Types.EscapeString.DotEscapeString,GiGraph.Dot.Types.EscapeString.DotEscapeString)">
            <summary>
                Specifies hyperlink attributes.
            </summary>
            <param name="Url">
                The URL.
            </param>
            <param name="Target">
                Determines which window of the browser is used for the URL. See
                <see cref="T:GiGraph.Dot.Types.Hyperlinks.DotHyperlinkTargets" />.
            </param>
            <param name="Href">
                Synonym for <paramref name="Url" />.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Hyperlinks.DotHyperlinkTargets">
            <summary>
                Specifies where to open linked documents.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Hyperlinks.DotHyperlinkTargets.NewWindow">
            <summary>
                Opens a new window if it doesn't already exist, or reuses it if it does.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Identifiers.DotId">
            <summary>
                Represents element identifier.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Identifiers.DotId.#ctor(System.String)">
            <summary>
                Creates a new element identifier.
            </summary>
            <param name="id">
                The identifier to use.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Images.DotImage">
            <summary>
                Image attributes.
            </summary>
            <param name="Path">
                Image path.
            </param>
            <param name="Alignment">
                Image alignment.
            </param>
            <param name="Scaling">
                Image scaling.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Images.DotImage.#ctor(System.String,System.Nullable{GiGraph.Dot.Types.Alignment.DotAlignment},System.Nullable{GiGraph.Dot.Types.Images.DotImageScaling})">
            <summary>
                Image attributes.
            </summary>
            <param name="Path">
                Image path.
            </param>
            <param name="Alignment">
                Image alignment.
            </param>
            <param name="Scaling">
                Image scaling.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Images.DotImageScaling">
            <summary>
                Image scaling options.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Images.DotImageScaling.None">
            <summary>
                The image retains its natural size.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Images.DotImageScaling.Uniform">
            <summary>
                The image is uniformly scaled (i.e., its aspect ratio is preserved) to fit inside the node or table cell. At least one
                dimension of the image will be as large as possible given the size of the node.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Images.DotImageScaling.FillWidth">
            <summary>
                The width of the image is scaled to fill the node or table cell width.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Images.DotImageScaling.FillHeight">
            <summary>
                The height of the image is scaled to fill the node or table cell height.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Images.DotImageScaling.FillBoth">
            <summary>
                Both the height and the width are scaled separately to fill the node or table cell.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Layout.DotLayoutDirection">
            <summary>
                The direction of graph layout.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Layout.DotLayoutEngines">
            <summary>
                Provides the names of available graph layout engines.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Layout.DotLayoutEngines.Dot">
            <summary>
                Draws “hierarchical” or layered drawings of directed graphs. This is the default tool to use if edges have directionality.
                See
                <see href="https://graphviz.org/pdf/dot.1.pdf">
                    documentation
                </see>
                .
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Layout.DotLayoutEngines.Neato">
            <summary>
                Draws “spring model” layouts. This is the default tool to use if the graph is not too large (about 100 nodes) and you don't
                know anything else about it. Neato attempts to minimize a global energy function, which is equivalent to statistical
                multi-dimensional scaling. See
                <see href="https://graphviz.org/pdf/dot.1.pdf">
                    documentation
                </see>
                .
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Layout.DotLayoutEngines.Osage">
            <summary>
                Draws clustered graphs. See
                <see href="https://graphviz.org/pdf/osage.1.pdf">
                    documentation
                </see>
                .
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Layout.DotLayoutEngines.Fdp">
            <summary>
                Draws “spring model” layouts similar to those of <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutEngines.Neato" />, but does this by reducing forces rather than working
                with energy. See
                <see href="https://graphviz.org/pdf/dot.1.pdf">
                    documentation
                </see>
                .
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Layout.DotLayoutEngines.Sfdp">
            <summary>
                A multiscale version of <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutEngines.Fdp" /> for the layout of large graphs. See
                <see href="https://graphviz.org/pdf/dot.1.pdf">
                    documentation
                </see>
                .
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Layout.DotLayoutEngines.Circo">
            <summary>
                Draws circular layouts. This is suitable for certain diagrams of multiple cyclic structures, such as certain
                telecommunications networks. See
                <see href="https://graphviz.org/pdf/dot.1.pdf">
                    documentation
                </see>
                .
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Layout.DotLayoutEngines.Twopi">
            <summary>
                Draws radial layouts. Nodes are placed on concentric circles depending their distance from a given root node. See
                <see href="https://graphviz.org/pdf/dot.1.pdf">
                    documentation
                </see>
                .
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Layout.DotLayoutEngines.Patchwork">
            <summary>
                Draws the graph as a squarified treemap. The clusters of the graph are used to specify the tree. See
                <see href="https://graphviz.org/pdf/patchwork.1.pdf">
                    documentation
                </see>
                .
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Nodes.DotNodeFillStyle">
            <summary>
                Fill style applicable to clusters.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeFillStyle.None">
            <summary>
                No fill.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeFillStyle.Normal">
            <summary>
                Causes a plain color fill when <see cref="T:GiGraph.Dot.Types.Colors.DotColor" /> is used, or a gradient fill when <see cref="T:GiGraph.Dot.Types.Colors.DotGradientColor" /> is
                used.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeFillStyle.Striped">
            <summary>
                Applicable to rectangularly-shaped nodes. Causes the fill to be done as a set of vertical stripes. The colors are specified
                via a color list (see <see cref="T:GiGraph.Dot.Types.Colors.DotMultiColor" />), and drawn from left to right in list order. Optional color weights can
                be specified to indicate the proportional widths of the bars. If the sum of the weights is less than 1, the remainder is
                divided evenly among the colors with no weight.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeFillStyle.Wedged">
            <summary>
                Applicable to elliptically-shaped nodes. Causes the fill to be done as a set of wedges. The colors are specified via a color
                list (see <see cref="T:GiGraph.Dot.Types.Colors.DotMultiColor" />), with the colors drawn counter-clockwise starting at angle 0. Optional color weights
                can be specified to indicate the proportional widths of the bars. If the sum of the weights is less than 1, the remainder is
                divided evenly among the colors with no weight.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeFillStyle.Radial">
            <summary>
                Causes a radial gradient fill when a <see cref="T:GiGraph.Dot.Types.Colors.DotGradientColor" /> is used.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Nodes.DotNodeShape">
            <summary>
                The node shape.
                <see href="https://www.graphviz.org/doc/info/shapes.html">
                    View how individual shapes are visualized
                </see>
                .
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.None">
            <summary>
                No shape, just label. Synonymous to <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.PlainText" />.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Plain">
            <summary>
                No shape, just label. Similar to <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.PlainText" /> and <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.None" />, except that it also enforces a zero width,
                height, and padding, which guarantees that the actual size of the node is entirely determined by the label. This is useful,
                for example, when using HTML-like labels.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.PlainText">
            <summary>
                No shape, just label. Synonymous to <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.None" />.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Point">
            <summary>
                The point shape. The way it is visualized is only affected by the peripheries, width, and height attributes.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Box">
            <summary>
                A rectangular shape. Synonymous to <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Rect" /> and <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Rectangle" />.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Box3D">
            <summary>
                A cuboid.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Rect">
            <summary>
                A rectangular shape. Synonymous to <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Rectangle" /> and <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Box" />.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Rectangle">
            <summary>
                A rectangular shape. Synonymous to <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Rect" /> and <see cref="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Box" />.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Polygon">
            <summary>
                A polygon shape. When set, the attributes sides, skew, and distortion are also used.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Record">
            <summary>
                Visually, a record is a box, with fields represented by alternating rows of horizontal or vertical subboxes. Use a
                <see cref="T:GiGraph.Dot.Types.Records.DotRecord" /> instance to define the fields of the record and assign it directly to the label attribute of the
                node (
                <see href="https://www.graphviz.org/doc/info/shapes.html#record">
                    learn more
                </see>
                ).
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.RoundedRecord">
            <summary>
                Visually, this type of record shape is a box with rounded corers, and fields represented by alternating rows of horizontal or
                vertical subboxes. Use a <see cref="T:GiGraph.Dot.Types.Records.DotRecord" /> instance to define the fields of the record and assign it directly to the
                label attribute of the node (
                <see href="https://www.graphviz.org/doc/info/shapes.html#record">
                    learn more
                </see>
                ).
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.CodingSequence">
            <summary>
                Synthetic biology: coding sequence (CDS).
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Signature">
            <summary>
                Synthetic biology: signature.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.LeftArrow">
            <summary>
                Synthetic biology: left arrow.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.RightArrow">
            <summary>
                Synthetic biology: right arrow.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.LeftPromoter">
            <summary>
                Synthetic biology: left promoter.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.RightPromoter">
            <summary>
                Synthetic biology: right promoter.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Promoter">
            <summary>
                Synthetic biology: promoter.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.UntranslatedRegion">
            <summary>
                Synthetic biology: untranslated region (UTR).
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Terminator">
            <summary>
                Synthetic biology: terminator.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.PrimerSite">
            <summary>
                Synthetic biology: primer site.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.RestrictionSite">
            <summary>
                Synthetic biology: restriction site.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.ThreePrimeOverhang">
            <summary>
                Synthetic biology: 3' overhang.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.FivePrimeOverhang">
            <summary>
                Synthetic biology: 5' overhang.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.NOverhang">
            <summary>
                Synthetic biology: n overhang.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Assembly">
            <summary>
                Synthetic biology: assembly.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.Insulator">
            <summary>
                Synthetic biology: insulator.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.RiboSite">
            <summary>
                Synthetic biology: ribo site.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.ProteaseSite">
            <summary>
                Synthetic biology: protease site.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.RnaStab">
            <summary>
                Synthetic biology: RNA stab.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeShape.ProteinStab">
            <summary>
                Synthetic biology: protein stab.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Nodes.DotNodeSize">
            <summary>
                Node size attributes.
            </summary>
            <param name="Width">
                The width.
            </param>
            <param name="Height">
                The height.
            </param>
            <param name="Mode">
                The sizing mode.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Nodes.DotNodeSize.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{GiGraph.Dot.Types.Nodes.DotNodeSizing})">
            <summary>
                Node size attributes.
            </summary>
            <param name="Width">
                The width.
            </param>
            <param name="Height">
                The height.
            </param>
            <param name="Mode">
                The sizing mode.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Nodes.DotNodeSizing">
            <summary>
                The node sizing mode values.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeSizing.Fixed">
            <summary>
                The node size is specified by the values of the width and height attributes only, and is not expanded to contain the text
                label. There will be a warning if the label (with padding) cannot fit within these limits.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeSizing.Auto">
            <summary>
                The size of a node is determined by smallest width and height needed to contain its label and image, if any, with a padding.
                The width and height must also be at least as large as the sizes specified by the width and height attributes, which specify
                the minimum values for these parameters.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Nodes.DotNodeSizing.Shape">
            <summary>
                The width and height attributes determine the size of the node shape, but the label can be much larger. Both the label and
                shape sizes are used when avoiding node overlap, but all edges to the node ignore the label and only contact the node shape.
                No warning is given if the label is too large.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Nodes.DotNodeStyleProperties">
            <summary>
                Node style attributes.
            </summary>
            <param name="FillStyle">
                Fill style.
            </param>
            <param name="BorderStyle">
                Border style.
            </param>
            <param name="BorderWeight">
                Border weight.
            </param>
            <param name="CornerStyle">
                Corner style.
            </param>
            <param name="Diagonals">
                Causes small chords to be drawn near the vertices of the node’s polygon or, in case of circles and ellipses, two chords near
                the top and the bottom of the shape.
            </param>
            <param name="Invisible">
                Determines whether the element is invisible.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Nodes.DotNodeStyleProperties.#ctor(GiGraph.Dot.Types.Nodes.DotNodeFillStyle,GiGraph.Dot.Types.Styling.DotBorderStyle,GiGraph.Dot.Types.Styling.DotBorderWeight,GiGraph.Dot.Types.Styling.DotCornerStyle,System.Boolean,System.Boolean)">
            <summary>
                Node style attributes.
            </summary>
            <param name="FillStyle">
                Fill style.
            </param>
            <param name="BorderStyle">
                Border style.
            </param>
            <param name="BorderWeight">
                Border weight.
            </param>
            <param name="CornerStyle">
                Corner style.
            </param>
            <param name="Diagonals">
                Causes small chords to be drawn near the vertices of the node’s polygon or, in case of circles and ellipses, two chords near
                the top and the bottom of the shape.
            </param>
            <param name="Invisible">
                Determines whether the element is invisible.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Orientation.DotOrientation">
            <summary>
                The orientation options.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Orientation.DotOrientation.Portrait">
            <summary>
                Vertical orientation.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Orientation.DotOrientation.Landscape">
            <summary>
                Horizontal orientation.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Packing.DotArrayPackingMode">
            <summary>
                Array packing mode parameters.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Packing.DotArrayPackingMode.#ctor(System.Nullable{GiGraph.Dot.Types.Packing.DotArrayPackingOptions})">
            <summary>
                Creates a new array packing mode instance.
            </summary>
            <param name="options">
                The options to initialize the instance with.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Packing.DotArrayPackingMode.#ctor(System.Nullable{System.Int32})">
            <summary>
                Creates a new array packing mode instance.
            </summary>
            <param name="rankCount">
                Specifies the number of columns for row-major component ordering or the number of rows for column-major component ordering.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Packing.DotArrayPackingMode.#ctor(System.Nullable{GiGraph.Dot.Types.Packing.DotArrayPackingOptions},System.Nullable{System.Int32})">
            <summary>
                Creates a new array packing mode instance.
            </summary>
            <param name="options">
                The options to initialize the instance with.
            </param>
            <param name="rankCount">
                Specifies the number of columns for row-major component ordering or the number of rows for column-major component ordering.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Packing.DotArrayPackingMode.Options">
            <summary>
                The granularity option.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Packing.DotArrayPackingMode.RankCount">
            <summary>
                The number of columns for row-major component ordering or the number of rows for column-major component ordering (see
                <see cref="F:GiGraph.Dot.Types.Packing.DotArrayPackingOptions.ColumnMajorOrder" />).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Packing.DotArrayPackingOptions">
            <summary>
                The flags used for customizing component distribution in the array packing mode.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Packing.DotArrayPackingOptions.ColumnMajorOrder">
            <summary>
                Components are packed in column-major order. When not specified, they are in row-major order, with the number of columns
                roughly the square root of the number of components.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Packing.DotArrayPackingOptions.AlignTop">
            <summary>
                Aligns graphs next to the top of the cells they occupy.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Packing.DotArrayPackingOptions.AlignRight">
            <summary>
                Aligns graphs next to the right side of the cells they occupy.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Packing.DotArrayPackingOptions.AlignBottom">
            <summary>
                Aligns graphs next to the bottom of the cells they occupy.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Packing.DotArrayPackingOptions.AlignLeft">
            <summary>
                Aligns graphs next to the left side of the cells they occupy.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Packing.DotArrayPackingOptions.SortByIndex">
            <summary>
                Causes the insertion order of elements in the array to be determined by user-supplied values. Each component can specify its
                sort value by a non-negative integer using the sort index attribute on a graph, on a cluster, or on a node. Components are
                inserted in order, starting with the one with the smallest sort value. If no sort value is specified, zero is used.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Packing.DotGranularPackingMode">
            <summary>
                A graph packing mode based on a granularity option.
            </summary>
            <param name="Granularity">
                The granularity option.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Packing.DotGranularPackingMode.#ctor(GiGraph.Dot.Types.Packing.DotPackingGranularity)">
            <summary>
                A graph packing mode based on a granularity option.
            </summary>
            <param name="Granularity">
                The granularity option.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Packing.DotPackingDefinition">
            <summary>
                Determines whether packing is enabled (see <see cref="T:GiGraph.Dot.Types.Packing.DotPackingToggle" />) or specifies a margin around each laid out
                component (see <see cref="T:GiGraph.Dot.Types.Packing.DotPackingMargin" />).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Packing.DotPackingGranularity">
            <summary>
                Graph packing granularity options.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Packing.DotPackingGranularity.Node">
            <summary>
                Causes packing at the node and edge level, with no overlapping of these objects. This produces a layout with the least area,
                but it also allows interleaving, where a node of one component may lie between two nodes in another component.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Packing.DotPackingGranularity.Cluster">
            <summary>
                Guarantees that top-level clusters are kept intact. What effect a value has also depends on the layout algorithm. For
                example, neato does not support clusters, so a value of <see cref="F:GiGraph.Dot.Types.Packing.DotPackingGranularity.Cluster" /> will have the same e"ect as the default "node"
                value.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Packing.DotPackingGranularity.Graph">
            <summary>
                Does a packing using the bounding box of the component. Thus, there will be a rectangular region around a component free of
                elements of any other component.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Packing.DotPackingGranularity.Array">
            <summary>
                Indicates that the components should be packed at the graph level into an array of graphs. By default, the components are in
                row-major order, with the number of columns roughly the square root of the number of components.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Packing.DotPackingMargin">
            <summary>
                Used as the size, in
                <see href="http://www.graphviz.org/doc/info/attrs.html#points">
                    points
                </see>
                , of a margin around each graph part being packed.
            </summary>
            <param name="Size">
                The size, in
                <see href="http://www.graphviz.org/doc/info/attrs.html#points">
                    points
                </see>
                , of a margin around each graph part being packed.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Packing.DotPackingMargin.#ctor(System.Int32)">
            <summary>
                Used as the size, in
                <see href="http://www.graphviz.org/doc/info/attrs.html#points">
                    points
                </see>
                , of a margin around each graph part being packed.
            </summary>
            <param name="Size">
                The size, in
                <see href="http://www.graphviz.org/doc/info/attrs.html#points">
                    points
                </see>
                , of a margin around each graph part being packed.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Packing.DotPackingModeDefinition">
            <summary>
                Packing mode definition with two supported options: packing with specified granularity (see
                <see cref="T:GiGraph.Dot.Types.Packing.DotGranularPackingMode" />) or array packing (see <see cref="T:GiGraph.Dot.Types.Packing.DotArrayPackingMode" />).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Packing.DotPackingToggle">
            <summary>
                Determines whether graph packing is enabled or disabled.
            </summary>
            <param name="Enabled">
                If true, each connected component of the graph is laid out separately, and then the graphs are packed together. If false, the
                entire graph is laid out together.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Packing.DotPackingToggle.#ctor(System.Boolean)">
            <summary>
                Determines whether graph packing is enabled or disabled.
            </summary>
            <param name="Enabled">
                If true, each connected component of the graph is laid out separately, and then the graphs are packed together. If false, the
                entire graph is laid out together.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Ranks.DotRadialRankSeparation">
            <summary>
                Radial separation of concentric circles in twopi.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Ranks.DotRadialRankSeparation.#ctor(System.Double[])">
            <summary>
                Creates a new rank separation instance.
            </summary>
            <param name="values">
                The first double specifies the radius of the inner circle; the second double specifies the increase in radius from the first
                circle to the second; etc. If there are more circles than numbers, the last number is used as the increment for the
                remainder.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Ranks.DotRadialRankSeparation.#ctor(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
                Creates a new rank separation instance.
            </summary>
            <param name="value">
                The first double specifies the radius of the inner circle; the second double specifies the increase in radius from the first
                circle to the second; etc. If there are more circles than numbers, the last number is used as the increment for the
                remainder.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Ranks.DotRadialRankSeparation.Values">
            <summary>
                The first double specifies the radius of the inner circle; the second double specifies the increase in radius from the first
                circle to the second; etc. If there are more circles than numbers, the last number is used as the increment for the
                remainder.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Ranks.DotRank">
            <summary>
                Rank constraints for the nodes in a graph, subgraph or cluster.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Ranks.DotRank.Same">
            <summary>
                All nodes are placed on the same rank.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Ranks.DotRank.Min">
            <summary>
                All nodes are placed on the minimum rank (topmost or leftmost, depending on layout direction).
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Ranks.DotRank.Max">
            <summary>
                All nodes are placed on the maximum rank (bottommost or rightmost, depending on layout direction).
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Ranks.DotRank.Source">
            <summary>
                All nodes are placed on the minimum rank, and the only nodes on the minimum rank belong to some subgraph whose rank attribute
                is <see cref="F:GiGraph.Dot.Types.Ranks.DotRank.Source" /> or <see cref="F:GiGraph.Dot.Types.Ranks.DotRank.Min" />.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Ranks.DotRank.Sink">
            <summary>
                All nodes are placed on the maximum rank, and the only nodes on the maximum rank belong to some subgraph whose rank attribute
                is <see cref="F:GiGraph.Dot.Types.Ranks.DotRank.Source" /> or <see cref="F:GiGraph.Dot.Types.Ranks.DotRank.Max" />.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Ranks.DotRankSeparation">
            <summary>
                Rank separation, in inches.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Ranks.DotRankSeparation.#ctor(System.Double,System.Boolean)">
            <summary>
                Creates a new rank separation instance.
            </summary>
            <param name="value">
                The minimum vertical distance in inches between the bottom of the nodes in one rank and the tops of nodes in the next.
            </param>
            <param name="equal">
                Determines if the centers of all ranks should be spaced equally apart.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Ranks.DotRankSeparation.#ctor(System.Boolean)">
            <summary>
                Creates a new rank separation instance.
            </summary>
            <param name="equal">
                Determines if the centers of all ranks should be spaced equally apart.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Ranks.DotRankSeparation.Value">
            <summary>
                The minimum vertical distance in inches between the bottom of the nodes in one rank and the tops of nodes in the next.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Ranks.DotRankSeparation.Equal">
            <summary>
                Indicates if the centers of all ranks should be spaced equally apart.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Ranks.DotRankSeparationDefinition">
            <summary>
                Rank separation (see <see cref="T:GiGraph.Dot.Types.Ranks.DotRankSeparation" /> and <see cref="T:GiGraph.Dot.Types.Ranks.DotRadialRankSeparation" />).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Records.DotRecord">
            <summary>
                Represents a record that can be used as the label of a
                <see href="http://www.graphviz.org/doc/info/shapes.html#record">
                    record-shaped node
                </see>
                .
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecord.#ctor(System.Boolean,GiGraph.Dot.Types.Records.DotRecordField[])">
            <summary>
                Creates a new record instance.
            </summary>
            <param name="flip">
                Determines whether the orientation of the record should be changed from horizontal to vertical, or the other way round. The
                initial orientation of a record-shaped node depends on the layout direction of the graph. If set to
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.TopToBottom" /> (the default) or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.BottomToTop" />, corresponding
                to vertical layouts, the top-level fields in a record are displayed horizontally. If, however, the direction is
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.LeftToRight" /> or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.RightToLeft" />, corresponding to horizontal
                layouts, the top-level fields are displayed vertically.
            </param>
            <param name="fields">
                The fields to initialize the record with.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecord.#ctor(GiGraph.Dot.Types.Records.DotRecordField[])">
            <summary>
                Creates a new record instance.
            </summary>
            <param name="fields">
                The fields to initialize the record with.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecord.#ctor(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.Records.DotRecordField},System.Boolean)">
            <summary>
                Creates a new record instance.
            </summary>
            <param name="fields">
                The fields to initialize the record with.
            </param>
            <param name="flip">
                Determines whether the orientation of the record should be changed from horizontal to vertical, or the other way round. The
                initial orientation of a record-shaped node depends on the layout direction of the graph. If set to
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.TopToBottom" /> (the default) or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.BottomToTop" />, corresponding
                to vertical layouts, the top-level fields in a record are displayed horizontally. If, however, the direction is
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.LeftToRight" /> or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.RightToLeft" />, corresponding to horizontal
                layouts, the top-level fields are displayed vertically.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecord.#ctor(System.Boolean,GiGraph.Dot.Types.EscapeString.DotEscapeString[])">
            <summary>
                Creates a new record instance.
            </summary>
            <param name="flip">
                Determines whether the orientation of the record should be changed from horizontal to vertical, or the other way round. The
                initial orientation of a record-shaped node depends on the layout direction of the graph. If set to
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.TopToBottom" /> (the default) or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.BottomToTop" />, corresponding
                to vertical layouts, the top-level fields in a record are displayed horizontally. If, however, the direction is
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.LeftToRight" /> or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.RightToLeft" />, corresponding to horizontal
                layouts, the top-level fields are displayed vertically.
            </param>
            <param name="fields">
                The fields to initialize the record with.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecord.#ctor(GiGraph.Dot.Types.EscapeString.DotEscapeString[])">
            <summary>
                Creates a new record instance.
            </summary>
            <param name="fields">
                The fields to initialize the record with.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecord.#ctor(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.EscapeString.DotEscapeString},System.Boolean)">
            <summary>
                Creates a new record instance.
            </summary>
            <param name="fields">
                The fields to initialize the record with.
            </param>
            <param name="flip">
                Determines whether the orientation of the record should be changed from horizontal to vertical, or the other way round. The
                initial orientation of a record-shaped node depends on the layout direction of the graph. If set to
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.TopToBottom" /> (the default) or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.BottomToTop" />, corresponding
                to vertical layouts, the top-level fields in a record are displayed horizontally. If, however, the direction is
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.LeftToRight" /> or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.RightToLeft" />, corresponding to horizontal
                layouts, the top-level fields are displayed vertically.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecord.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
                Creates a new record instance.
            </summary>
            <param name="fields">
                The fields to initialize the record with.
            </param>
            <param name="flip">
                Determines whether the orientation of the record should be changed from horizontal to vertical, or the other way round. The
                initial orientation of a record-shaped node depends on the layout direction of the graph. If set to
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.TopToBottom" /> (the default) or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.BottomToTop" />, corresponding
                to vertical layouts, the top-level fields in a record are displayed horizontally. If, however, the direction is
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.LeftToRight" /> or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.RightToLeft" />, corresponding to horizontal
                layouts, the top-level fields are displayed vertically.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Records.DotRecord.Fields">
            <summary>
                Gets the fields of the record.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Records.DotRecord.Flip">
            <summary>
                Determines whether the orientation of the record should be changed from horizontal to vertical, or the other way round. The
                initial orientation of a record-shaped node depends on the layout direction of the graph. If set to
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.TopToBottom" /> (the default) or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.BottomToTop" />, corresponding
                to vertical layouts, the top-level fields in a record are displayed horizontally. If, however, the direction is
                <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.LeftToRight" /> or <see cref="F:GiGraph.Dot.Types.Layout.DotLayoutDirection.RightToLeft" />, corresponding to horizontal
                layouts, the top-level fields are displayed vertically.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Records.DotRecordBuilder">
            <summary>
                Facilitates building a record for use as a label.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.#ctor">
            <summary>
                Creates a new record builder instance.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.#ctor(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.Records.DotRecordField})">
            <summary>
                Creates a new record builder instance initialized with a list of fields.
            </summary>
            <param name="fields">
                The record fields to initialize the instance with.
            </param>
        </member>
        <member name="P:GiGraph.Dot.Types.Records.DotRecordBuilder.Count">
            <summary>
                Gets the number of fields in this builder.
            </summary>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendField(GiGraph.Dot.Types.EscapeString.DotEscapeString,System.String)">
            <summary>
                Appends a field to the record being built.
            </summary>
            <param name="text">
                The text of the field to append.
            </param>
            <param name="portName">
                The port name, that is a name that can be referred to from an edge endpoint in order to attach the end of the edge to the
                appended field.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendField(System.Action{GiGraph.Dot.Types.EscapeString.DotFormattedTextBuilder},System.String)">
            <summary>
                Appends a field to the record being built.
            </summary>
            <param name="formatText">
                The method delegate to generate formatted text for the field, using the specified text formatter.
            </param>
            <param name="portName">
                The port name, that is a name that can be referred to from an edge endpoint in order to attach the end of the edge to the
                appended field.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendFields(GiGraph.Dot.Types.EscapeString.DotEscapeString[])">
            <summary>
                Appends fields to the record being built.
            </summary>
            <param name="fields">
                The textual fields to append.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendFields(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.EscapeString.DotEscapeString})">
            <summary>
                Appends fields to the record being built.
            </summary>
            <param name="fields">
                The textual fields to append.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendFields(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Appends fields to the record being built.
            </summary>
            <param name="fields">
                The textual fields to append.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendFields(GiGraph.Dot.Types.Records.DotRecordField[])">
            <summary>
                Appends fields to the record being built.
            </summary>
            <param name="fields">
                The fields to append (<see cref="T:GiGraph.Dot.Types.Records.DotRecordTextField" />, <see cref="T:GiGraph.Dot.Types.Records.DotRecord" />).
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendFields(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.Records.DotRecordField})">
            <summary>
                Appends fields to the record being built.
            </summary>
            <param name="fields">
                The fields to append (<see cref="T:GiGraph.Dot.Types.Records.DotRecordTextField" />, <see cref="T:GiGraph.Dot.Types.Records.DotRecord" />).
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendRecord(GiGraph.Dot.Types.Records.DotRecord)">
            <summary>
                Appends a sub-record to the record being built.
            </summary>
            <param name="record">
                The record to append.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendRecord(GiGraph.Dot.Types.EscapeString.DotEscapeString[])">
            <summary>
                Appends a sub-record to the record being built.
            </summary>
            <param name="fields">
                The textual fields to append.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendRecord(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.EscapeString.DotEscapeString},System.Boolean)">
            <summary>
                Appends a sub-record to the record being built.
            </summary>
            <param name="fields">
                The textual fields to append.
            </param>
            <param name="flip">
                Determines whether the the sub-record should be flipped. By default, a sub-record is oriented opposite to the orientation of
                its parent record.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendRecord(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
                Appends a sub-record to the record being built.
            </summary>
            <param name="fields">
                The textual fields to append.
            </param>
            <param name="flip">
                Determines whether the the sub-record should be flipped. By default, a sub-record is oriented opposite to the orientation of
                its parent record.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendRecord(GiGraph.Dot.Types.Records.DotRecordField[])">
            <summary>
                Appends sub-record to the record being built.
            </summary>
            <param name="fields">
                The fields of the record to append (<see cref="T:GiGraph.Dot.Types.Records.DotRecordTextField" />, <see cref="T:GiGraph.Dot.Types.Records.DotRecord" />).
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendRecord(System.Collections.Generic.IEnumerable{GiGraph.Dot.Types.Records.DotRecordField},System.Boolean)">
            <summary>
                Appends a sub-record to the record being built.
            </summary>
            <param name="fields">
                The fields of the record to append (<see cref="T:GiGraph.Dot.Types.Records.DotRecordTextField" />, <see cref="T:GiGraph.Dot.Types.Records.DotRecord" />).
            </param>
            <param name="flip">
                Determines whether the the sub-record should be flipped. By default, a sub-record is oriented opposite to the orientation of
                its parent record.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendRecord(System.Action{GiGraph.Dot.Types.Records.DotRecordBuilder},System.Boolean)">
            <summary>
                Appends a sub-record to the record being built, by providing another record builder instance.
            </summary>
            <param name="buildRecord">
                The method delegate to build a record using the specified record builder.
            </param>
            <param name="flip">
                Determines whether the the sub-record should be flipped. By default, a sub-record is oriented opposite to the orientation of
                its parent record.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendFlippedRecord(GiGraph.Dot.Types.EscapeString.DotEscapeString[])">
            <summary>
                Appends sub-record to the record being built, with an orientation opposite to the orientation of its parent record.
            </summary>
            <param name="fields">
                The textual fields to append.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.AppendFlippedRecord(GiGraph.Dot.Types.Records.DotRecordField[])">
            <summary>
                Appends sub-record to the record being built, with an orientation opposite to the orientation of its parent record.
            </summary>
            <param name="fields">
                The fields of the record to append (<see cref="T:GiGraph.Dot.Types.Records.DotRecordTextField" />, <see cref="T:GiGraph.Dot.Types.Records.DotRecord" />).
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordBuilder.Build(System.Boolean)">
            <summary>
                Builds and returns a record.
            </summary>
            <param name="flip">
                Determines whether to change orientation of the record.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Records.DotRecordField">
            <summary>
                Represents a field of a record (<see cref="T:GiGraph.Dot.Types.Records.DotRecord" />). It can either be text (<see cref="T:GiGraph.Dot.Types.Records.DotRecordTextField" />), or
                another record (<see cref="T:GiGraph.Dot.Types.Records.DotRecord" />). A record can be used as the label of a
                <see href="http://www.graphviz.org/doc/info/shapes.html#record">
                    record-shaped node
                </see>
                .
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Records.DotRecordTextField">
            <summary>
                Represents a textual field of a record (<see cref="T:GiGraph.Dot.Types.Records.DotRecord" />). A record can be used as the label of a
                <see href="http://www.graphviz.org/doc/info/shapes.html#record">
                    record-shaped node
                </see>
                .
            </summary>
            <param name="Text">
                The text of the field.
            </param>
            <param name="PortName">
                The port name, that is a name that can be referred to from an edge's endpoint in order to attach the end of the edge to the
                current field. You can specify the port on an edge's head or tail endpoint, or, alternatively, by using a corresponding
                attribute for the head or tail among the attributes of the edge.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordTextField.#ctor(GiGraph.Dot.Types.EscapeString.DotEscapeString,System.String)">
            <summary>
                Represents a textual field of a record (<see cref="T:GiGraph.Dot.Types.Records.DotRecord" />). A record can be used as the label of a
                <see href="http://www.graphviz.org/doc/info/shapes.html#record">
                    record-shaped node
                </see>
                .
            </summary>
            <param name="Text">
                The text of the field.
            </param>
            <param name="PortName">
                The port name, that is a name that can be referred to from an edge's endpoint in order to attach the end of the edge to the
                current field. You can specify the port on an edge's head or tail endpoint, or, alternatively, by using a corresponding
                attribute for the head or tail among the attributes of the edge.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Styling.DotBorderStyle">
            <summary>
                Border style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotBorderStyle.Normal">
            <summary>
                The default border style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotBorderStyle.Solid">
            <summary>
                A solid border style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotBorderStyle.Dashed">
            <summary>
                A dashed border style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotBorderStyle.Dotted">
            <summary>
                A dotted border style.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Styling.DotBorderWeight">
            <summary>
                Border weight.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotBorderWeight.Normal">
            <summary>
                A normal border weight.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotBorderWeight.Bold">
            <summary>
                A bold border style.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Styling.DotClusterNodeCommonStyleProperties`1.FillStyle">
            <summary>
                The fill style.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Styling.DotClusterNodeCommonStyleProperties`1.BorderStyle">
            <summary>
                The border style.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Styling.DotClusterNodeCommonStyleProperties`1.BorderWeight">
            <summary>
                The border weight.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Styling.DotClusterNodeCommonStyleProperties`1.CornerStyle">
            <summary>
                The corner style.
            </summary>
        </member>
        <member name="P:GiGraph.Dot.Types.Styling.DotClusterNodeCommonStyleProperties`1.Invisible">
            <summary>
                Determines whether the element is invisible.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Styling.DotCornerStyle">
            <summary>
                Corner style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotCornerStyle.Normal">
            <summary>
                A normal corner style (orthogonal).
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotCornerStyle.Rounded">
            <summary>
                A rounded corner style.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Styling.DotFillStyle">
            <summary>
                The fill styles of an element.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotFillStyle.None">
            <summary>
                No fill.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotFillStyle.Normal">
            <summary>
                Applies a filled style to the shape. Applicable to nodes and clusters.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotFillStyle.Striped">
            <summary>
                Causes the fill to be done as a set of vertical stripes. The colors are specified via a color list (see
                <see cref="T:GiGraph.Dot.Types.Colors.DotMultiColor" />), and drawn from left to right in list order. Optional color weights can be specified to
                indicate the proportional widths of the bars. If the sum of the weights is less than 1, the remainder is divided evenly among
                the colors with no weight. Applicable to clusters and rectangularly-shaped nodes.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotFillStyle.Wedged">
            <summary>
                Causes the fill to be done as a set of wedges. The colors are specified via a color list (see <see cref="T:GiGraph.Dot.Types.Colors.DotMultiColor" />),
                with the colors drawn counter-clockwise starting at angle 0. Optional color weights can be specified to indicate the
                proportional widths of the bars. If the sum of the weights is less than 1, the remainder is divided evenly among the colors
                with no weight. Applicable to elliptically-shaped nodes.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotFillStyle.Radial">
            <summary>
                Indicates a radial-style gradient fill when colors are specified via a color list (see <see cref="T:GiGraph.Dot.Types.Colors.DotGradientColor" />).
                Applicable to nodes, clusters, and graphs.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Styling.DotLineStyle">
            <summary>
                Line style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotLineStyle.Normal">
            <summary>
                The default style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotLineStyle.Solid">
            <summary>
                A solid line style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotLineStyle.Dashed">
            <summary>
                A dashed line style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotLineStyle.Dotted">
            <summary>
                A dotted line style.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotLineStyle.Tapered">
            <summary>
                Causes the line to tapper from a specified width towards a width of 1 (in points).
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Styling.DotLineWeight">
            <summary>
                Line weight.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotLineWeight.Normal">
            <summary>
                A normal line weight.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotLineWeight.Bold">
            <summary>
                A bold line style.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Styling.DotStyles">
            <summary>
                The styles of an element.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Default">
            <summary>
                Indicates that the normal default style should be assigned to the current element. This setting can be used in order to
                restore the style of the element to the default value when a custom style has been set globally for this type of element on a
                graph or a subgraph, using global edge attributes or global node attributes.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Solid">
            <summary>
                A solid line style. Applicable to nodes, edges, and clusters.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Dashed">
            <summary>
                A dashed line style. Applicable to nodes, edges, and clusters.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Dotted">
            <summary>
                A dotted line style. Applicable to nodes, edges, and clusters.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Bold">
            <summary>
                A bold line style. Applicable to nodes, edges, and clusters.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Rounded">
            <summary>
                Applies rounded corners to the shape. Applicable to nodes and clusters.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Diagonals">
            <summary>
                Causes small chords to be drawn near the vertices of the node’s polygon or, in case of circles and ellipses, two chords near
                the top and the bottom of the shape. Applicable to nodes.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Filled">
            <summary>
                Applies a filled style to the shape. Applicable to nodes and clusters.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Striped">
            <summary>
                Causes the fill to be done as a set of vertical stripes. The colors are specified via a color list (see
                <see cref="T:GiGraph.Dot.Types.Colors.DotMultiColor" />), and drawn from left to right in list order. Optional color weights can be specified to
                indicate the proportional widths of the bars. If the sum of the weights is less than 1, the remainder is divided evenly among
                the colors with no weight. Applicable to clusters and rectangularly-shaped nodes.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Wedged">
            <summary>
                Causes the fill to be done as a set of wedges. The colors are specified via a color list (see <see cref="T:GiGraph.Dot.Types.Colors.DotMultiColor" />),
                with the colors drawn counter-clockwise starting at angle 0. Optional color weights can be specified to indicate the
                proportional widths of the bars. If the sum of the weights is less than 1, the remainder is divided evenly among the colors
                with no weight. Applicable to elliptically-shaped nodes.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Radial">
            <summary>
                Indicates a radial-style gradient fill when colors are specified via a color list (see <see cref="T:GiGraph.Dot.Types.Colors.DotGradientColor" />).
                Applicable to nodes, clusters, and graphs.
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Tapered">
            <summary>
                <para>
                    Applicable to edges. The effect depends on the width attribute of an edge, its directions attribute, and the arrowhead
                    attributes of its head and tail.
                </para>
                <para>
                    The edge starts with the width specified in the attributes, and tapers to width 1, in points. The directions attribute
                    determines whether the tapering goes from tail to head (<see cref="F:GiGraph.Dot.Types.Edges.DotEdgeDirections.Forward" /> ), from head to tail (
                    <see cref="F:GiGraph.Dot.Types.Edges.DotEdgeDirections.Backward" />), from the middle to both the head and tail (
                    <see cref="F:GiGraph.Dot.Types.Edges.DotEdgeDirections.Both" />), or no tapering at all (<see cref="F:GiGraph.Dot.Types.Edges.DotEdgeDirections.None" />). If the attribute
                    is not explicitly set, the default for the graph type is used.
                </para>
                <para>
                    Arrowheads and arrow tails are also drawn based on the value of the directions attribute. To avoid this, set the
                    arrowhead attribute for the head or the tail to <see cref="F:GiGraph.Dot.Types.Arrowheads.DotArrowheadShape.None" />.
                </para>
            </summary>
        </member>
        <member name="F:GiGraph.Dot.Types.Styling.DotStyles.Invisible">
            <summary>
                Makes the element invisible. Applicable to nodes, edges, and clusters.
            </summary>
        </member>
        <member name="T:GiGraph.Dot.Types.Viewport.DotNodeCenteredViewport">
            <summary>
                Specifies a viewport for the graph image, with a node as the central point.
            </summary>
            <param name="Width">
                The width of the final image, in points.
            </param>
            <param name="Height">
                The height of the final image, in points.
            </param>
            <param name="NodeId">
                The identifier of a node whose center should be used as the focus.
            </param>
            <param name="Zoom">
                The zoom factor. The image in the original layout will be <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Width" /> / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" />
                by <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Height" /> / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" /> points in size. By default, the zoom factor is 1.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Viewport.DotNodeCenteredViewport.#ctor(System.Double,System.Double,System.String,System.Double)">
            <summary>
                Specifies a viewport for the graph image, with a node as the central point.
            </summary>
            <param name="Width">
                The width of the final image, in points.
            </param>
            <param name="Height">
                The height of the final image, in points.
            </param>
            <param name="NodeId">
                The identifier of a node whose center should be used as the focus.
            </param>
            <param name="Zoom">
                The zoom factor. The image in the original layout will be <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Width" /> / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" />
                by <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Height" /> / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" /> points in size. By default, the zoom factor is 1.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Viewport.DotPointCenteredViewport">
            <summary>
                Specifies a viewport for the graph image, with a central point.
            </summary>
            <param name="Width">
                The width of the final image, in points.
            </param>
            <param name="Height">
                The height of the final image, in points.
            </param>
            <param name="X">
                The x-coordinate of the center of the viewport.
            </param>
            <param name="Y">
                The y-coordinate of the center of the viewport.
            </param>
            <param name="Zoom">
                The zoom factor. The image in the original layout will be <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Width" /> / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" />
                by <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Height" /> / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" /> points in size. By default, the zoom factor is 1.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Viewport.DotPointCenteredViewport.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Specifies a viewport for the graph image, with a central point.
            </summary>
            <param name="Width">
                The width of the final image, in points.
            </param>
            <param name="Height">
                The height of the final image, in points.
            </param>
            <param name="X">
                The x-coordinate of the center of the viewport.
            </param>
            <param name="Y">
                The y-coordinate of the center of the viewport.
            </param>
            <param name="Zoom">
                The zoom factor. The image in the original layout will be <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Width" /> / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" />
                by <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Height" /> / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" /> points in size. By default, the zoom factor is 1.
            </param>
        </member>
        <member name="T:GiGraph.Dot.Types.Viewport.DotViewport">
            <summary>
                Specifies a viewport for the graph image.
            </summary>
            <param name="Width">
                The width of the final image, in points.
            </param>
            <param name="Height">
                The height of the final image, in points.
            </param>
            <param name="Zoom">
                The zoom factor. The image in the original layout will be <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Width" /> / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" /> by <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Height" />
                / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" /> points in size. By default, the zoom factor is 1.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Viewport.DotViewport.#ctor(System.Double,System.Double,System.Double)">
            <summary>
                Specifies a viewport for the graph image.
            </summary>
            <param name="Width">
                The width of the final image, in points.
            </param>
            <param name="Height">
                The height of the final image, in points.
            </param>
            <param name="Zoom">
                The zoom factor. The image in the original layout will be <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Width" /> / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" /> by <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Height" />
                / <see cref="P:GiGraph.Dot.Types.Viewport.DotViewport.Zoom" /> points in size. By default, the zoom factor is 1.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Viewport.DotViewport.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Records.DotRecordField.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Ranks.DotRankSeparationDefinition.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Packing.DotPackingDefinition.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Packing.DotPackingModeDefinition.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Identifiers.DotId.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Html.DotHtmlString.GiGraph#Dot#Output#Qualities#IDotHtmlEncodable#ToHtml(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Converts the entity to an HTML string.
            </summary><param name="options">
                The syntax options to apply.
            </param><param name="syntaxRules">
                The syntax rules to apply.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Graphs.DotGraphScalingDefinition.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotPoint.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Geometry.DotRectangle.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.EscapeString.DotEscapeString.GiGraph#Dot#Output#Qualities#IDotEscapable#GetEscaped(GiGraph.Dot.Output.Text.Escaping.IDotTextEscaper)">
            <summary>
                Gets the escaped text.
            </summary><param name="textEscaper">
                The text escaper to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Edges.DotEndpointPort.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Colors.DotColorDefinition.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
        <member name="M:GiGraph.Dot.Types.Arrowheads.DotArrowheadDefinition.GiGraph#Dot#Output#Qualities#IDotEncodable#GetDotEncodedValue(GiGraph.Dot.Output.Options.DotSyntaxOptions,GiGraph.Dot.Output.Options.DotSyntaxRules)">
            <summary>
                Gets a DOT-encoded value.
            </summary><param name="options">
                The DOT generation options to use.
            </param><param name="syntaxRules">
                The DOT syntax rules to use.
            </param>
        </member>
    </members>
</doc>
